const { SteamDeckValidator } = require('./monorepo-root/product-filter-service/dist/services/validation.service/category/steam-deck.validator');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
const validator = new SteamDeckValidator();

// –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã
const problematicProducts = [
  {
    name: "–ù–∞–∫–ª–∞–¥–∫–∏ –Ω–∞ —Å—Ç–∏–∫–∏ –ª–∞–ø–∫–∏ –¥–ª—è Steam Deck –°—Ç–∏–º –î–µ–∫",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–°–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π —á–µ—Ö–æ–ª –¥–ª—è SteamDeck OLED",
    query: "steam deck oled", 
    expected: false,
    reason: "accessory"
  },
  {
    name: "–°–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π –∑–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è OLED",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–ó–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è OLED",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–ß–µ—Ö–æ–ª –¥–ª—è Steam Deck Basic Set PC0104",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–î–æ–∫-—Å—Ç–∞–Ω—Ü–∏—è Steam Deck, OLED, ROG Ally –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–°–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π –∑–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è Steam Deck OLED",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  },
  {
    name: "–ó–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è Steam Deck OLED",
    query: "steam deck oled",
    expected: false,
    reason: "accessory"
  }
];

// –í–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
const validProducts = [
  {
    name: "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Steam Deck OLED 512–ì–ë",
    query: "steam deck oled",
    expected: true,
    reason: "model-match"
  },
  {
    name: "Steam Deck OLED 512 –ì–ë",
    query: "steam deck oled",
    expected: true,
    reason: "model-match"
  },
  {
    name: "–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ Steam Deck OLED 1TB",
    query: "steam deck oled",
    expected: true,
    reason: "model-match"
  }
];

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ Steam Deck\n');

console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã):');
problematicProducts.forEach((product, index) => {
  const result = validator.validate('steam_deck', product.query, product.name);
  const status = result.isValid === product.expected ? '‚úÖ' : '‚ùå';
  console.log(`${status} ${index + 1}. "${product.name}"`);
  console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: ${product.expected} (${product.reason}), –ü–æ–ª—É—á–µ–Ω–æ: ${result.isValid} (${result.reason})`);
  console.log('');
});

console.log('‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏):');
validProducts.forEach((product, index) => {
  const result = validator.validate('steam_deck', product.query, product.name);
  const status = result.isValid === product.expected ? '‚úÖ' : '‚ùå';
  console.log(`${status} ${index + 1}. "${product.name}"`);
  console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: ${product.expected} (${product.reason}), –ü–æ–ª—É—á–µ–Ω–æ: ${result.isValid} (${result.reason})`);
  console.log('');
}); 