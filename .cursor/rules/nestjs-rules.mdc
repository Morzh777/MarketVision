# üèóÔ∏è NestJS –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

### **–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç):**
- **@NestJS** - –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ NestJS
- **@TypeScript** - –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
- **@gRPC** - –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º –∏ gRPC

### **–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ (—Ä–µ–∑–µ—Ä–≤):**
- **[NestJS Documentation](https://docs.nestjs.com/)** - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- **[NestJS Microservices](https://docs.nestjs.com/microservices/basics)** - –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
- **[NestJS gRPC](https://docs.nestjs.com/microservices/grpc)** - gRPC –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
- **[NestJS Testing](https://docs.nestjs.com/fundamentals/testing)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- **[NestJS Validation](https://docs.nestjs.com/techniques/validation)** - –í–∞–ª–∏–¥–∞—Ü–∏—è
- **[NestJS Caching](https://docs.nestjs.com/techniques/caching)** - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- **[NestJS Security](https://docs.nestjs.com/security/authentication)** - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- **[NestJS Configuration](https://docs.nestjs.com/techniques/configuration)** - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- **[NestJS Database](https://docs.nestjs.com/techniques/database)** - –†–∞–±–æ—Ç–∞ —Å –ë–î
- **[NestJS Exception Filters](https://docs.nestjs.com/exception-filters)** - –§–∏–ª—å—Ç—Ä—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
- **[NestJS Interceptors](https://docs.nestjs.com/interceptors)** - –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∏
- **[NestJS Pipes](https://docs.nestjs.com/pipes)** - –¢—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥—ã
- **[NestJS Guards](https://docs.nestjs.com/guards)** - –ó–∞—â–∏—Ç–Ω–∏–∫–∏

## üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

### –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª–µ–π
- –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–¥—É–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
- –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–π API –≤ –º–æ–¥—É–ª–∏
- –û–¥–∏–Ω –º–æ–¥—É–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω/–º–∞—Ä—à—Ä—É—Ç
- –û–¥–∏–Ω –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
- –ü–∞–ø–∫–∞ models —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
- –°–µ—Ä–≤–∏—Å—ã —Å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π –∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
```
src/
‚îú‚îÄ‚îÄ core/                    # NestJS –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ filters/            # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ guards/             # Guards –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏
‚îÇ   ‚îú‚îÄ‚îÄ interceptors/       # Interceptors –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚îÇ   ‚îî‚îÄ‚îÄ middlewares/        # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ middleware
‚îú‚îÄ‚îÄ shared/                 # –û–±—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
‚îÇ   ‚îú‚îÄ‚îÄ utils/             # –£—Ç–∏–ª–∏—Ç—ã
‚îÇ   ‚îî‚îÄ‚îÄ services/          # –û–±—â–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îú‚îÄ‚îÄ modules/               # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
‚îÇ   ‚îú‚îÄ‚îÄ products/          # –ú–æ–¥—É–ª—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ controllers/   # –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/      # –°–µ—Ä–≤–∏—Å—ã
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ models/        # DTOs –∏ —Ç–∏–ø—ã
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ entities/      # –°—É—â–Ω–æ—Å—Ç–∏ MikroORM
‚îÇ   ‚îî‚îÄ‚îÄ auth/              # –ú–æ–¥—É–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚îî‚îÄ‚îÄ main.ts                # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
```

## üìù TypeScript Guidelines

> **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ**: –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ TypeScript —Å–º–æ—Ç—Ä–∏ –≤ `typescript-rules.mdc`

### –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –¥–ª—è NestJS
- –ò—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –∫–æ–¥–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- –í—Å–µ–≥–¥–∞ –æ–±—ä—è–≤–ª—è–π —Ç–∏–ø—ã –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–π
- –ò–∑–±–µ–≥–∞–π `any`, —Å–æ–∑–¥–∞–≤–∞–π –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∏–ø—ã
- –ò—Å–ø–æ–ª—å–∑—É–π JSDoc –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∏ –º–µ—Ç–æ–¥–æ–≤
- –ù–µ –æ—Å—Ç–∞–≤–ª—è–π –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π
- –û–¥–∏–Ω —ç–∫—Å–ø–æ—Ä—Ç –Ω–∞ —Ñ–∞–π–ª

## üèóÔ∏è NestJS –°–ø–µ—Ü–∏—Ñ–∏–∫–∞

### –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
```typescript
// ‚úÖ –û–¥–∏–Ω –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–∞ –º–∞—Ä—à—Ä—É—Ç
@Controller('products')
export class ProductsController {
  constructor(private readonly productsService: ProductsService) {}

  @Get()
  async findAll(): Promise<Product[]> {
    return this.productsService.findAll()
  }

  @Post()
  async create(@Body() createProductDto: CreateProductDto): Promise<Product> {
    return this.productsService.create(createProductDto)
  }

  @Get('admin/test')
  async test(): Promise<{ status: string }> {
    return { status: 'OK' }
  }
}
```

### –°–µ—Ä–≤–∏—Å—ã
```typescript
// ‚úÖ –û–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –Ω–∞ —Å—É—â–Ω–æ—Å—Ç—å
@Injectable()
export class ProductsService {
  constructor(
    private readonly productsRepository: ProductsRepository,
    private readonly logger: Logger
  ) {}

  async findAll(): Promise<Product[]> {
    try {
      return await this.productsRepository.findAll()
    } catch (error) {
      this.logger.error('Failed to fetch products', error)
      throw new InternalServerErrorException('Failed to fetch products')
    }
  }

  async create(createProductDto: CreateProductDto): Promise<Product> {
    const product = this.productsRepository.create(createProductDto)
    return await this.productsRepository.save(product)
  }
}
```

### DTOs –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
```typescript
// ‚úÖ DTOs —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–ª—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export class CreateProductDto {
  @IsString()
  @IsNotEmpty()
  @Length(1, 255)
  name: string

  @IsNumber()
  @IsPositive()
  price: number

  @IsString()
  @IsIn(['videocards', 'processors', 'motherboards'])
  category: string
}

// ‚úÖ –ü—Ä–æ—Å—Ç—ã–µ —Ç–∏–ø—ã –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export interface ProductResponse {
  id: string
  name: string
  price: number
  category: string
  createdAt: Date
}
```

### –ú–æ–¥—É–ª–∏
```typescript
// ‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
@Module({
  imports: [
    MikroOrmModule.forFeature([Product]),
    SharedModule
  ],
  controllers: [ProductsController],
  providers: [ProductsService, ProductsRepository],
  exports: [ProductsService]
})
export class ProductsModule {}
```

## üóÑÔ∏è –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏

### –°—É—â–Ω–æ—Å—Ç–∏ MikroORM
```typescript
// ‚úÖ –°—É—â–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
@Entity()
export class Product {
  @PrimaryKey()
  id: string = crypto.randomUUID()

  @Property()
  name: string

  @Property()
  price: number

  @Property()
  category: string

  @Property()
  createdAt: Date = new Date()

  @Property({ nullable: true })
  updatedAt?: Date
}
```

### Repository Pattern
```typescript
// ‚úÖ Repository –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
@Injectable()
export class ProductsRepository {
  constructor(
    @InjectRepository(Product)
    private readonly productRepository: EntityRepository<Product>
  ) {}

  async findAll(): Promise<Product[]> {
    return this.productRepository.findAll()
  }

  async findById(id: string): Promise<Product | null> {
    return this.productRepository.findOne({ id })
  }

  async create(data: CreateProductDto): Promise<Product> {
    const product = this.productRepository.create(data)
    return this.productRepository.persistAndFlush(product)
  }
}
```

## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

### Guards
```typescript
// ‚úÖ Guards –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏
@Injectable()
export class AuthGuard implements CanActivate {
  canActivate(context: ExecutionContext): boolean {
    const request = context.switchToHttp().getRequest()
    return this.validateRequest(request)
  }

  private validateRequest(request: any): boolean {
    // –õ–æ–≥–∏–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    return true
  }
}
```

### Filters
```typescript
// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
@Catch()
export class GlobalExceptionFilter implements ExceptionFilter {
  catch(exception: unknown, host: ArgumentsHost) {
    const ctx = host.switchToHttp()
    const response = ctx.getResponse()
    const request = ctx.getRequest()

    const status = exception instanceof HttpException
      ? exception.getStatus()
      : HttpStatus.INTERNAL_SERVER_ERROR

    response.status(status).json({
      statusCode: status,
      timestamp: new Date().toISOString(),
      path: request.url,
      message: exception instanceof HttpException
        ? exception.message
        : 'Internal server error'
    })
  }
}
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### Unit —Ç–µ—Å—Ç—ã
```typescript
// ‚úÖ Arrange-Act-Assert
describe('ProductsService', () => {
  let service: ProductsService
  let mockRepository: jest.Mocked<ProductsRepository>

  beforeEach(() => {
    mockRepository = {
      findAll: jest.fn(),
      create: jest.fn()
    } as any

    service = new ProductsService(mockRepository)
  })

  describe('findAll', () => {
    it('should return all products', async () => {
      // Arrange
      const inputProducts = [
        { id: '1', name: 'RTX 5070', price: 50000 }
      ]
      const expectedProducts = inputProducts
      mockRepository.findAll.mockResolvedValue(inputProducts)

      // Act
      const actualProducts = await service.findAll()

      // Assert
      expect(actualProducts).toEqual(expectedProducts)
      expect(mockRepository.findAll).toHaveBeenCalledTimes(1)
    })
  })
})
```

### E2E —Ç–µ—Å—Ç—ã
```typescript
// ‚úÖ Given-When-Then
describe('Products API (e2e)', () => {
  let app: INestApplication

  beforeEach(async () => {
    const moduleFixture = await Test.createTestingModule({
      imports: [AppModule]
    }).compile()

    app = moduleFixture.createNestApplication()
    await app.init()
  })

  it('/products (GET) should return products', async () => {
    // Given
    const expectedStatus = 200

    // When
    const response = await request(app.getHttpServer())
      .get('/products')
      .expect(expectedStatus)

    // Then
    expect(response.body).toBeInstanceOf(Array)
  })
})
```

## üìä –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### Interceptors
```typescript
// ‚úÖ Interceptors –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
@Injectable()
export class LoggingInterceptor implements NestInterceptor {
  constructor(private readonly logger: Logger) {}

  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {
    const request = context.switchToHttp().getRequest()
    const method = request.method
    const url = request.url

    this.logger.log(`${method} ${url}`)

    const now = Date.now()
    return next.handle().pipe(
      tap(() => {
        this.logger.log(`${method} ${url} - ${Date.now() - now}ms`)
      })
    )
  }
}
```

## üö® –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

### –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- –ò—Å–ø–æ–ª—å–∑—É–π –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ü—Ä–∏–º–µ–Ω—è–π –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤
- –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
- –ò—Å–ø–æ–ª—å–∑—É–π connection pooling

### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- –í–∞–ª–∏–¥–∏—Ä—É–π –≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- –ò—Å–ø–æ–ª—å–∑—É–π prepared statements
- –ù–µ —Ö—Ä–∞–Ω–∏ —Å–µ–∫—Ä–µ—Ç—ã –≤ –∫–æ–¥–µ
- –ü—Ä–∏–º–µ–Ω—è–π rate limiting
- –õ–æ–≥–∏—Ä—É–π –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

### –ö–æ–¥
- –°–ª–µ–¥—É–π SOLID –ø—Ä–∏–Ω—Ü–∏–ø–∞–º
- –ò—Å–ø–æ–ª—å–∑—É–π dependency injection
- –ü–∏—à–∏ —á–∏—Å—Ç—ã–π, —á–∏—Ç–∞–µ–º—ã–π –∫–æ–¥
- –î–æ–±–∞–≤–ª—è–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–µ
- –†–µ–≥—É–ª—è—Ä–Ω–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏ –∫–æ–¥

## üö® –ß–µ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å

- ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π `any` —Ç–∏–ø
- ‚ùå –ù–µ –¥–µ–ª–∞–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª–∏–Ω–Ω–µ–µ 20 –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
- ‚ùå –ù–µ —Å–æ–∑–¥–∞–≤–∞–π –∫–ª–∞—Å—Å—ã –±–æ–ª—å—à–µ 200 —Å—Ç—Ä–æ–∫
- ‚ùå –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
- ‚ùå –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
- ‚ùå –ù–µ –¥–µ–ª–∞–π –≤—Å–µ –≤ –æ–¥–Ω–æ–º –º–æ–¥—É–ª–µ

## üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏

### **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
- **[NestJS Docs](https://docs.nestjs.com/)** - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- **[NestJS GitHub](https://github.com/nestjs/nest)** - –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
- **[NestJS Examples](https://github.com/nestjs/nest/tree/master/sample)** - –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞

### **–°–æ–æ–±—â–µ—Å—Ç–≤–æ:**
- **[NestJS Discord](https://discord.gg/nestjs)** - Discord —Å–µ—Ä–≤–µ—Ä
- **[NestJS Stack Overflow](https://stackoverflow.com/questions/tagged/nestjs)** - –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
- **[NestJS Blog](https://blog.nestjs.com/)** - –ë–ª–æ–≥ –∫–æ–º–∞–Ω–¥—ã

### **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**
- **[NestJS CLI](https://docs.nestjs.com/cli/overview)** - –ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
- **[NestJS Schematics](https://docs.nestjs.com/cli/usages#nest-generate)** - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–æ–¥–∞
- **[NestJS Testing](https://docs.nestjs.com/fundamentals/testing)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### **–î–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ MarketVision:**
- **[NestJS gRPC](https://docs.nestjs.com/microservices/grpc)** - –î–ª—è WB API –∏ Ozon API
- **[NestJS Caching](https://docs.nestjs.com/techniques/caching)** - –î–ª—è Redis –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
- **[NestJS Validation](https://docs.nestjs.com/techniques/validation)** - –î–ª—è DTO –≤–∞–ª–∏–¥–∞—Ü–∏–∏
description:
globs:
alwaysApply: false
---
