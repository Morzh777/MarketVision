// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const testAuth = async () => {
  const baseUrl = 'http://localhost:3000';
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...\n');

  // –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  console.log('1. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:');
  try {
    const loginResponse = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'pavlishev',
        password: '171989Bkmz'
      }),
    });

    const loginData = await loginResponse.json();
    console.log('–°—Ç–∞—Ç—É—Å:', loginResponse.status);
    console.log('–û—Ç–≤–µ—Ç:', loginData);
    
    if (loginData.success) {
      console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
      
      // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:');
      const meResponse = await fetch(`${baseUrl}/api/auth/me`, {
        headers: {
          'Cookie': loginResponse.headers.get('set-cookie') || ''
        }
      });
      
      const meData = await meResponse.json();
      console.log('–°—Ç–∞—Ç—É—Å:', meResponse.status);
      console.log('–û—Ç–≤–µ—Ç:', meData);
      
      if (meData.success) {
        console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞!');
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
      }
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', loginData.message);
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
  }

  // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  console.log('\n3. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:');
  try {
    const wrongLoginResponse = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'pavlishev',
        password: 'wrongpassword'
      }),
    });

    const wrongLoginData = await wrongLoginResponse.json();
    console.log('–°—Ç–∞—Ç—É—Å:', wrongLoginResponse.status);
    console.log('–û—Ç–≤–µ—Ç:', wrongLoginData);
    
    if (!wrongLoginData.success) {
      console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å!');
    } else {
      console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –±—ã–ª –ø—Ä–∏–Ω—è—Ç!');
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
  }

  // –¢–µ—Å—Ç 4: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
  console.log('\n4. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:');
  try {
    const protectedResponse = await fetch(`${baseUrl}/api/scheduler/status`);
    const protectedData = await protectedResponse.json();
    console.log('–°—Ç–∞—Ç—É—Å:', protectedResponse.status);
    console.log('–û—Ç–≤–µ—Ç:', protectedData);
    
    if (protectedResponse.status === 401) {
      console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –±–µ–∑ —Ç–æ–∫–µ–Ω–∞!');
    } else {
      console.log('‚ùå –î–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É API –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!');
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
  }

  console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAuth(); 