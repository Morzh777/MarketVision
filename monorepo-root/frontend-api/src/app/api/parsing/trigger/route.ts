import { INTERNAL_API_URL } from '@/constants/api'
import { NextRequest, NextResponse } from 'next/server'
import { API } from '@/config'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { categoryKey } = body

    if (!categoryKey) {
      return NextResponse.json(
        { success: false, message: 'categoryKey is required' },
        { status: 400 }
      )
    }

    console.log(`üöÄ Frontend API: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryKey}`)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –≤ Product-Filter —Å–µ—Ä–≤–∏—Å —á–µ—Ä–µ–∑ nginx
    const response = await fetch(`${INTERNAL_API_URL}/api/parsing/trigger`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ categoryKey }),
    })

    const result = await response.json()

    if (!response.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç Product-Filter:`, result)
      return NextResponse.json(
        { success: false, message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞', error: result },
        { status: response.status }
      )
    }

    console.log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryKey}`)
    
    return NextResponse.json({
      success: true,
      message: '–£–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ',
      data: result.data
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ Frontend API:', error)
    return NextResponse.json(
      { success: false, message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' },
      { status: 500 }
    )
  }
}
