import { NextRequest, NextResponse } from 'next/server'

/**
 * GET /api/queries/category/[categoryKey] - –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
export async function GET(
  request: NextRequest,
  { params }: { params: { categoryKey: string } }
) {
  try {
    const { categoryKey } = params

    if (!categoryKey) {
      return NextResponse.json(
        { 
          success: false, 
          error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä categoryKey' 
        },
        { status: 400 }
      )
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ DB API —á–µ—Ä–µ–∑ nginx
    const dbApiUrl = `http://marketvision-nginx-dev/api/admin/queries?categoryKey=${encodeURIComponent(categoryKey)}`
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', { categoryKey, url: dbApiUrl })

    const response = await fetch(dbApiUrl, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ —Å URL —Å—Ö–µ–º–∞–º–∏
      cache: 'no-store',
      next: { revalidate: 0 }
    })

    if (!response.ok) {
      console.error('‚ùå DB API error:', { status: response.status, statusText: response.statusText })
      return NextResponse.json(
        { 
          success: false, 
          error: `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤: ${response.status} ${response.statusText}` 
        },
        { status: response.status }
      )
    }

    const result = await response.json()
    console.log('üì° DB API response:', { 
      status: response.status, 
      count: Array.isArray(result) ? result.length : 'not array',
      categoryKey 
    })

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
    return NextResponse.json(Array.isArray(result) ? result : [])

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error)
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ URL —Å—Ö–µ–º—ã, –Ω–æ –ª–æ–≥–∏—Ä—É–µ–º –∏—Ö
    if (error instanceof Error && error.message.includes('Unknown url scheme')) {
      console.warn('‚ö†Ô∏è URL scheme error (ignored):', error.message)
      return NextResponse.json([]) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
    }
    
    return NextResponse.json(
      { 
        success: false, 
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' 
      },
      { status: 500 }
    )
  }
}