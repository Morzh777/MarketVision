import { INTERNAL_API_URL } from '@/constants/api'
import { NextRequest, NextResponse } from 'next/server'

// PUT /api/admin/queries/query/[query] - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
export async function PUT(
  request: NextRequest,
  { params }: { params: Promise<{ query: string }> }
) {
  try {
    const { query } = await params
    const { searchParams } = new URL(request.url)
    const categoryKey = searchParams.get('categoryKey')
    
    if (!categoryKey) {
      return NextResponse.json({ error: '–ü–∞—Ä–∞–º–µ—Ç—Ä categoryKey –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }, { status: 400 })
    }

    const body = await request.json()
    console.log('üîç PUT /api/admin/queries/query/[query] - query:', query, 'categoryKey:', categoryKey, 'body:', body)
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ cookies
    const authToken = request.cookies.get('auth')?.value
    if (!authToken) {
      console.log('‚ùå –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 401 })
    }

    console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ db-api:', `${INTERNAL_API_URL}/api/admin/queries/query/${encodeURIComponent(query)}?categoryKey=${categoryKey}`)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ db-api —á–µ—Ä–µ–∑ nginx
    const response = await fetch(`${INTERNAL_API_URL}/api/admin/queries/query/${encodeURIComponent(query)}?categoryKey=${categoryKey}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${authToken}`,
      },
      body: JSON.stringify(body),
    })

    const data = await response.json()
    console.log('üîç –û—Ç–≤–µ—Ç –æ—Ç db-api:', { status: response.status, data })

    if (response.ok) {
      console.log('‚úÖ –ó–∞–ø—Ä–æ—Å—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ db-api')
      return NextResponse.json(data)
    }

    console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç db-api:', data.error)
    return NextResponse.json({ error: data.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤' }, { status: response.status })
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:', error)
    return NextResponse.json({ error: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É' }, { status: 500 })
  }
}
