#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ë–î: —Ç–æ–ª—å–∫–æ 2 –æ–ø–µ—Ä–∞—Ü–∏–∏
#  - update-schema: –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–¥–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏/—Å—Ö–µ–º—É
#  - reset-and-update: –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å volume, –∑–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã

set -euo pipefail

compose_db="docker-compose -f docker-compose.db.yml"
compose_all="docker-compose -f docker-compose.db.yml -f docker-compose.yml"
pg_container="marketvision-postgres"
api_container="marketvision-database-api"

wait_for_pg() {
  echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
  until docker exec ${pg_container} pg_isready -U marketvision -d marketvision >/dev/null 2>&1; do
    echo "PostgreSQL –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
    sleep 2
  done
  echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"
}

ensure_up() {
  echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Postgres + db-api..."
  ${compose_all} up -d --build
  wait_for_pg
}

prisma_apply() {
  echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
  if ! docker exec ${api_container} npx prisma migrate deploy; then
    echo "‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã. –í—ã–ø–æ–ª–Ω—è—é prisma db push..."
    docker exec ${api_container} npx prisma db push
  fi
  echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client..."
  docker exec ${api_container} npx prisma generate
}

case "${1:-}" in
  update-schema)
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö"
    ${compose_db} up -d
    ensure_up
    prisma_apply
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --filter "name=marketvision" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ"
    ;;

  reset-and-update)
    echo "üß® –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ë–î (volume) + –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã"
    ${compose_all} down || true
    ${compose_db} down -v || true
    ${compose_db} up -d
    wait_for_pg
    ${compose_all} up -d --build
    # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reset, –µ—Å–ª–∏ –µ—Å—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏; –∏–Ω–∞—á–µ db push
    if docker exec ${api_container} sh -lc "test -d prisma/migrations && [ \"\$(ls -A prisma/migrations | wc -l)\" -gt 0 ]"; then
      echo "üîÑ prisma migrate reset --force"
      docker exec -e FORCE_COLOR=1 ${api_container} npx prisma migrate reset --force --skip-seed || true
    fi
    prisma_apply
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --filter "name=marketvision" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ"
    ;;

  *)
    echo "üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {update-schema|reset-and-update}"
    echo "  update-schema     - –ü–æ–¥–Ω—è—Ç—å Postgres+API –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ö–µ–º—É –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö"
    echo "  reset-and-update  - –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Ç–æ–º–∞ –ë–î –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã"
    exit 1
    ;;
esac