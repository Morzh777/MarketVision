#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ db-api

case "$1" in
  "start-db")
    echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose -f docker-compose.db.yml up -d
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞"
    ;;
    
  "start-db-full")
    echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ PostgreSQL —Å –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π..."
    docker-compose -f docker-compose.db.yml up -d
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞"
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    sleep 5
    until docker exec marketvision-postgres pg_isready -U marketvision -d marketvision; do
      echo "PostgreSQL –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
      sleep 2
    done
    echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"
    echo "üöÄ –ó–∞–ø—É—Å–∫ API –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    docker-compose -f docker-compose.db.yml -f docker-compose.yml up -d
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API..."
    sleep 10
    echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    docker exec marketvision-database-api npx prisma migrate deploy
    echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client..."
    docker exec marketvision-database-api npx prisma generate
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!"
    ;;
    
  "stop-db")
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose -f docker-compose.db.yml down
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    ;;
    
  "init-db")
    echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
    until docker exec marketvision-postgres pg_isready -U marketvision -d marketvision; do
      echo "PostgreSQL –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
      sleep 2
    done
    echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"
    echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    docker exec marketvision-database-api npx prisma migrate deploy
    echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client..."
    docker exec marketvision-database-api npx prisma generate
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!"
    ;;
    
  "reset-db")
    echo "üîÑ –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose -f docker-compose.db.yml down -v
    docker-compose -f docker-compose.db.yml up -d
    sleep 5
    echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π –±–∞–∑—ã..."
    $0 init-db
    ;;
    
  "start-api")
    echo "üöÄ –ó–∞–ø—É—Å–∫ Database API..."
    docker-compose -f docker-compose.db.yml -f docker-compose.yml up -d
    echo "‚úÖ API –∑–∞–ø—É—â–µ–Ω"
    ;;
    
  "stop-api")
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Database API..."
    docker-compose -f docker-compose.db.yml -f docker-compose.yml down
    echo "‚úÖ API –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ;;
    
  "start-all")
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.db.yml -f docker-compose.yml up -d
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
    ;;
    
  "stop-all")
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.db.yml -f docker-compose.yml down
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    ;;
    
  "logs-api")
    docker-compose -f docker-compose.db.yml -f docker-compose.yml logs -f
    ;;
    
  "logs-db")
    docker-compose -f docker-compose.db.yml logs -f
    ;;
    
  "status")
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --filter "name=marketvision" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    ;;
    
  *)
    echo "üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start-db|stop-db|init-db|reset-db|start-api|stop-api|start-all|stop-all|logs-api|logs-db|status}"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start-db    - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ PostgreSQL"
    echo "  stop-db     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ PostgreSQL"
    echo "  init-db     - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É (–º–∏–≥—Ä–∞—Ü–∏–∏ + Prisma Client)"
    echo "  reset-db    - –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã (—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ + –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å)"
    echo "  start-api   - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ API (–Ω—É–∂–Ω–∞ –±–∞–∑–∞)"
    echo "  stop-api    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ API"
    echo "  start-all   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑—É + API"
    echo "  stop-all    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ"
    echo "  logs-api    - –õ–æ–≥–∏ API"
    echo "  logs-db     - –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  status      - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    ;;
esac 