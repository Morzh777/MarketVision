#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DB_NAME="marketvision"
DB_USER="marketvision"
BACKUP_DIR="./backups"

echo "üö® DISASTER RECOVERY - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ MarketVision"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞
find_latest_backup() {
    local latest_gz=$(ls -t ${BACKUP_DIR}/marketvision_backup_*.gz 2>/dev/null | head -1)
    local latest_sql=$(ls -t ${BACKUP_DIR}/marketvision_backup_*.sql 2>/dev/null | head -1)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –±—ç–∫–∞–ø –Ω–æ–≤–µ–µ
    if [ -n "$latest_gz" ] && [ -n "$latest_sql" ]; then
        if [ "$latest_gz" -nt "$latest_sql" ]; then
            echo "$latest_gz"
        else
            echo "$latest_sql"
        fi
    elif [ -n "$latest_gz" ]; then
        echo "$latest_gz"
    elif [ -n "$latest_sql" ]; then
        echo "$latest_sql"
    else
        echo ""
    fi
}

# –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
LATEST_BACKUP=$(find_latest_backup)

if [ -z "$LATEST_BACKUP" ]; then
    echo "‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${BACKUP_DIR}/"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    ls -lh ${BACKUP_DIR}/marketvision_backup_* 2>/dev/null || echo "   –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    exit 1
fi

# –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –ø—É—Ç–∏
BACKUP_FILE=$(basename "$LATEST_BACKUP")
BACKUP_FILE_NO_EXT="${BACKUP_FILE%.gz}"
BACKUP_FILE_NO_EXT="${BACKUP_FILE_NO_EXT%.sql}"

echo "üì¶ –ù–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø: ${BACKUP_FILE}"
echo "üìä –†–∞–∑–º–µ—Ä: $(ls -lh "$LATEST_BACKUP" | awk '{print $5}')"
echo "üìÖ –î–∞—Ç–∞: $(ls -lh "$LATEST_BACKUP" | awk '{print $6, $7, $8}')"

echo ""
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã!"
echo "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "  1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo "  2. –°–æ—Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ PostgreSQL (volume –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è)"
echo "  3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –∏–∑ –±—ç–∫–∞–ø–∞: ${BACKUP_FILE}"
echo "  4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    exit 1
fi

echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ..."

# –®–∞–≥ 1: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
./scripts/docker-manager.sh stop-all

cd ../ozon-api
docker-compose down 2>/dev/null || true

cd ../wb-api
docker-compose down 2>/dev/null || true

cd ../product-filter-service
docker-compose down 2>/dev/null || true

echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 2: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL (–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ volume)
echo "üíæ –®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL (–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è)..."
docker-compose -f docker-compose.db.yml down
echo "‚úÖ –î–∞–Ω–Ω—ã–µ PostgreSQL —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ volume"

# –®–∞–≥ 3: –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∑–∞–Ω–æ–≤–æ
echo "üóÑÔ∏è –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ PostgreSQL..."
./scripts/docker-manager.sh start-db
echo "‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω"

# –®–∞–≥ 4: –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ –®–∞–≥ 4: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
sleep 5

# –ñ–¥–µ–º –ø–æ–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
until docker ps --filter "name=marketvision-postgres" --format "{{.Status}}" | grep -q "Up"; do
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä PostgreSQL –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω..."
    sleep 3
done

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
until docker exec marketvision-postgres pg_isready -U marketvision -d marketvision >/dev/null 2>&1; do
    echo "PostgreSQL –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
    sleep 3
done
echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"

# –®–∞–≥ 5: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
echo "üì¶ –®–∞–≥ 5: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞..."
if [[ "$LATEST_BACKUP" == *.gz ]]; then
    echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–∂–∞—Ç–æ–≥–æ –±—ç–∫–∞–ø–∞..."
    gunzip -c "$LATEST_BACKUP" | docker exec -i marketvision-postgres psql -U ${DB_USER} -d ${DB_NAME}
else
    echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ SQL –±—ç–∫–∞–ø–∞..."
    docker exec -i marketvision-postgres psql -U ${DB_USER} -d ${DB_NAME} < "$LATEST_BACKUP"
fi

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è!"
    exit 1
fi
echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

# –®–∞–≥ 6: –ó–∞–ø—É—Å–∫–∞–µ–º Database API
echo "üöÄ –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ Database API..."
./scripts/docker-manager.sh start-api
echo "‚úÖ Database API –∑–∞–ø—É—â–µ–Ω"

# –®–∞–≥ 7: –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ –®–∞–≥ 7: –ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

cd ../ozon-api
docker-compose up -d
echo "‚úÖ Ozon API –∑–∞–ø—É—â–µ–Ω"

cd ../wb-api
docker-compose up -d
echo "‚úÖ WB API –∑–∞–ø—É—â–µ–Ω"

cd ../product-filter-service
docker-compose up -d
echo "‚úÖ Product Filter Service –∑–∞–ø—É—â–µ–Ω"

# –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
./scripts/docker-manager.sh status

echo ""
echo "üéâ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "=================================================="
echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑: ${BACKUP_FILE}"
echo "‚úÖ –î–∞–Ω–Ω—ã–µ PostgreSQL —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ volume"
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"
echo ""
echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "  ./scripts/docker-manager.sh logs-api"
echo "  docker logs -f marketvision-ozon-parser"
echo "  docker logs -f marketvision-wb-api" 