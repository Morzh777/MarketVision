const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkPriceHistory() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è "rtx 5070"...\n');

    // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    const totalRecords = await prisma.priceHistory.count({
      where: { query: 'rtx 5070' }
    });
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${totalRecords}`);

    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
    const uniquePrices = await prisma.priceHistory.findMany({
      where: { query: 'rtx 5070' },
      select: { price: true },
      distinct: ['price']
    });
    console.log(`üí∞ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω: ${uniquePrices.length}`);

    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
    const recentRecords = await prisma.priceHistory.findMany({
      where: { query: 'rtx 5070' },
      orderBy: { created_at: 'desc' },
      take: 10,
      select: {
        id: true,
        price: true,
        source: true,
        created_at: true
      }
    });

    console.log('\nüìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π:');
    recentRecords.forEach((record, index) => {
      console.log(`${index + 1}. ID: ${record.id}, –¶–µ–Ω–∞: ${record.price}‚ÇΩ, –ò—Å—Ç–æ—á–Ω–∏–∫: ${record.source}, –î–∞—Ç–∞: ${record.created_at.toISOString()}`);
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
    const sourceStats = await prisma.priceHistory.groupBy({
      by: ['source'],
      where: { query: 'rtx 5070' },
      _count: { source: true }
    });

    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:');
    sourceStats.forEach(stat => {
      console.log(`- ${stat.source}: ${stat._count.source} –∑–∞–ø–∏—Å–µ–π`);
    });

    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
    const priceStats = await prisma.priceHistory.aggregate({
      where: { query: 'rtx 5070' },
      _min: { price: true },
      _max: { price: true },
      _avg: { price: true }
    });

    console.log('\nüí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–Ω:');
    console.log(`- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: ${priceStats._min.price}‚ÇΩ`);
    console.log(`- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: ${priceStats._max.price}‚ÇΩ`);
    console.log(`- –°—Ä–µ–¥–Ω—è—è: ${Math.round(priceStats._avg.price)}‚ÇΩ`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPriceHistory(); 