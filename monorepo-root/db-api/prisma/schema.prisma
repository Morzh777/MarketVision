// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String         @id
  name          String
  price         Int
  image_url     String         @map("image_url")
  product_url   String         @map("product_url")
  category      String
  source        String
  query         String
  is_valid      Boolean?       @map("is_valid")
  reason        String?        @map("reason")
  confidence    Float?         @map("confidence")
  created_at    DateTime       @default(now()) @map("created_at")
  price_history PriceHistory[] @relation("ProductToPriceHistory")
}

model PriceHistory {
  id         Int      @id @default(autoincrement())
  product_id String?  @map("product_id")
  query      String
  source     String
  price      Int
  created_at DateTime @default(now()) @map("created_at")
  product    Product? @relation(fields: [product_id], references: [id], name: "ProductToPriceHistory")
}

model MarketStats {
  id              Int      @id @default(autoincrement())
  product_id      String?
  query           String
  category        String
  source          String
  min             Int
  max             Int
  mean            Float
  median          Float
  iqr             Json
  total_count     Int
  created_at      DateTime @default(now())
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  role      String   @default("user") // "admin" или "user"
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model TelegramUser {
  id           Int       @id @default(autoincrement())
  telegram_id  String    @unique @map("telegram_id")
  username     String?
  first_name   String?
  last_name    String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  
  @@map("telegram_users")
}
