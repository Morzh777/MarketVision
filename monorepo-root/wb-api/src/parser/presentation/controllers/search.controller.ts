import { Controller, Get, Query, Logger, Inject } from '@nestjs/common';
import { VideocardsService } from '../../application/services/videocards.service';
import { CpusService } from '../../application/services/cpus.service';
import { MotherboardsService } from '../../application/services/motherboards.service';

@Controller('parser')
export class SearchController {
  private readonly logger = new Logger(SearchController.name);

  constructor(
    private readonly videocardsService: VideocardsService,
    private readonly cpusService: CpusService,
    private readonly motherboardsService: MotherboardsService
  ) {}

  // üéØ –ù–û–í–´–ô –≠–ù–î–ü–û–ò–ù–¢: –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Product-Filter-Service
  @Get('search')
  async searchProducts(
    @Query('query') query: string,
    @Query('xsubject') xsubject: string,
    @Query('test') test?: string
  ) {
    const isTestMode = test === 'true';
    this.logger.log(`üîç –ü–æ–∏—Å–∫: \"${query}\" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${xsubject}${isTestMode ? ' [–¢–ï–°–¢]' : ''}`);
    
    if (!query || !xsubject) {
      return { error: '–¢—Ä–µ–±—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã query –∏ xsubject' };
    }

    try {
      const xsubjectNum = parseInt(xsubject);
      
      // üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –ò—Å–ø–æ–ª—å–∑—É–µ–º –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ WB –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      // –í test mode –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö WB
      
      // üéØ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ xsubject
      let service;
      switch (xsubjectNum) {
        case 3274: // –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã
          service = this.videocardsService;
          break;
        case 3698: // –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã
          service = this.cpusService;
          break;
        case 3690: // –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã
          service = this.motherboardsService;
          break;
        default:
          return { error: `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${xsubject}` };
      }

      // üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
      const products = await service.searchProductsByQuery(query, xsubjectNum);
      return products;
      
    } catch (error) {
      this.logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ "${query}":`, error);
      return { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' };
    }
  }

  // üß™ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï: –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  private getTestData(query: string, xsubject: number): any[] {
    const baseId = Math.floor(Math.random() * 1000000);
    
    switch (xsubject) {
      case 3274: // –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã
        return this.getVideocardsTestData(query, baseId);
      case 3698: // –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã
        return this.getProcessorsTestData(query, baseId);
      case 3690: // –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã
        return this.getMotherboardsTestData(query, baseId);
      default:
        return [];
    }
  }

  // üéÆ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï: –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã (–º–∏–∫—Å –≤–∞–ª–∏–¥–Ω—ã—Ö –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö)
  private getVideocardsTestData(query: string, baseId: number): any[] {
    const testData = [
      // ‚úÖ –í–ê–õ–ò–î–ù–´–ï: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã
      {
        id: baseId + 1,
        name: 'NVIDIA GeForce RTX 5070 Ti Gaming 16GB',
        price: 81519,
        image_url: 'https://example.com/rtx5070ti.jpg',
        product_url: 'https://example.com/product/1'
      },
      {
        id: baseId + 2,
        name: 'RTX 5080 WINDFORCE OC 16GB',
        price: 114776,
        image_url: 'https://example.com/rtx5080.jpg',
        product_url: 'https://example.com/product/2'
      },
      {
        id: baseId + 3,
        name: 'AMD Radeon RX 7900 XT Gaming 20GB',
        price: 75000,
        image_url: 'https://example.com/rx7900xt.jpg',
        product_url: 'https://example.com/product/3'
      },
      
      // ‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ï: –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
      {
        id: baseId + 10,
        name: 'RTX 4060 Ti Gaming OC 8GB',
        price: 45000,
        image_url: 'https://example.com/rtx4060ti.jpg',
        product_url: 'https://example.com/product/10'
      },
      {
        id: baseId + 11,
        name: '–£–¥–ª–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–±–µ–ª—å –¥–ª—è –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã PCIE',
        price: 1563,
        image_url: 'https://example.com/cable.jpg',
        product_url: 'https://example.com/product/11'
      },
      {
        id: baseId + 12,
        name: 'GTX 1660 Super Gaming 6GB',
        price: 25000,
        image_url: 'https://example.com/gtx1660.jpg',
        product_url: 'https://example.com/product/12'
      }
    ];

    // üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    // –ù–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º - –ø—É—Å—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã —Å–∞–º–∏ —Ä–µ—à–∞—é—Ç —á—Ç–æ –≤–∞–ª–∏–¥–Ω–æ!
    return testData;
  }

  // üñ•Ô∏è –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï: –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã (–º–∏–∫—Å –≤–∞–ª–∏–¥–Ω—ã—Ö –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö)
  private getProcessorsTestData(query: string, baseId: number): any[] {
    const testData = [
      // ‚úÖ –í–ê–õ–ò–î–ù–´–ï: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã 13-14 –ø–æ–∫–æ–ª–µ–Ω–∏—è Intel –∏ Ryzen 5000+
      {
        id: baseId + 20,
        name: 'Intel Core i5-14600KF BOX LGA1700',
        price: 15918,
        image_url: 'https://example.com/i5-14600kf.jpg',
        product_url: 'https://example.com/product/20'
      },
      {
        id: baseId + 21,
        name: 'Intel Core i9-14900KF OEM',
        price: 37141,
        image_url: 'https://example.com/i9-14900kf.jpg',
        product_url: 'https://example.com/product/21'
      },
      {
        id: baseId + 22,
        name: 'AMD Ryzen 7 7800X3D AM5 BOX',
        price: 31149,
        image_url: 'https://example.com/7800x3d.jpg',
        product_url: 'https://example.com/product/22'
      },
      {
        id: baseId + 23,
        name: 'AMD Ryzen 5 5600X AM4 BOX',
        price: 7415,
        image_url: 'https://example.com/5600x.jpg',
        product_url: 'https://example.com/product/23'
      },
      
      // ‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ï: –°—Ç–∞—Ä—ã–µ –ø–æ–∫–æ–ª–µ–Ω–∏—è - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã
      {
        id: baseId + 30,
        name: 'Intel Core i5-8400 LGA1151 BOX',
        price: 12000,
        image_url: 'https://example.com/i5-8400.jpg',
        product_url: 'https://example.com/product/30'
      },
      {
        id: baseId + 31,
        name: 'AMD Ryzen 5 2600X AM4 BOX',
        price: 3802,
        image_url: 'https://example.com/r5-2600x.jpg',
        product_url: 'https://example.com/product/31'
      },
      {
        id: baseId + 32,
        name: 'AMD Athlon X4-970 AM4 BOX',
        price: 2500,
        image_url: 'https://example.com/athlon.jpg',
        product_url: 'https://example.com/product/32'
      },
      {
        id: baseId + 33,
        name: 'Intel Core i7 4770K LGA1150',
        price: 3573,
        image_url: 'https://example.com/i7-4770k.jpg',
        product_url: 'https://example.com/product/33'
      }
    ];

    // üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    // –ù–ï —Ñ–∏–ª—å—Ç—Ä—É–µ–º - –ø—É—Å—Ç—å Product-Filter-Service —Å–∞–º –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç!
    return testData;
  }

  // üîß –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï: –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã (–º–∏–∫—Å –≤–∞–ª–∏–¥–Ω—ã—Ö –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö)
  private getMotherboardsTestData(query: string, baseId: number): any[] {
    const testData = [
      // ‚úÖ –í–ê–õ–ò–î–ù–´–ï: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —á–∏–ø—Å–µ—Ç—ã
      {
        id: baseId + 40,
        name: 'ASUS PRIME B650-PLUS AM5 DDR5',
        price: 12500,
        image_url: `https://images.wbstatic.net/c516x688/${baseId + 40}.jpg`,
        product_url: `https://www.wildberries.ru/catalog/${baseId + 40}/detail.aspx`
      },
      {
        id: baseId + 41,
        name: 'MSI MAG Z790 TOMAHAWK WIFI LGA1700',
        price: 25000,
        image_url: `https://images.wbstatic.net/c516x688/${baseId + 41}.jpg`,
        product_url: `https://www.wildberries.ru/catalog/${baseId + 41}/detail.aspx`
      },
      {
        id: baseId + 42,
        name: 'GIGABYTE X670E AORUS MASTER AM5',
        price: 35000,
        image_url: `https://images.wbstatic.net/c516x688/${baseId + 42}.jpg`,
        product_url: `https://www.wildberries.ru/catalog/${baseId + 42}/detail.aspx`
      },
      
      // ‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ï: –°—Ç–∞—Ä—ã–µ —á–∏–ø—Å–µ—Ç—ã - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã
      {
        id: baseId + 50,
        name: 'ASUS H110M-K LGA1151 DDR4',
        price: 3500,
        image_url: `https://images.wbstatic.net/c516x688/${baseId + 50}.jpg`,
        product_url: `https://www.wildberries.ru/catalog/${baseId + 50}/detail.aspx`
      },
      {
        id: baseId + 51,
        name: 'MSI B450M GAMING PLUS AM4',
        price: 4500,
        image_url: `https://images.wbstatic.net/c516x688/${baseId + 51}.jpg`,
        product_url: `https://www.wildberries.ru/catalog/${baseId + 51}/detail.aspx`
      }
    ];

    // üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    // –ù–ï —Ñ–∏–ª—å—Ç—Ä—É–µ–º - –ø—É—Å—Ç—å Product-Filter-Service —Å–∞–º –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç!
    return testData;
  }
} 