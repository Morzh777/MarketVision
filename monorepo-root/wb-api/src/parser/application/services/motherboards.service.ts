import { Injectable, Inject } from '@nestjs/common';
import { BaseParserService } from './base-parser.service';
import { WildberriesApiClient, PhotoService } from '../../domain/interfaces/wb-api.interface';
import { ProductFilterClient } from '../../../grpc-clients/product-filter.client';
import { WB_API_CLIENT, PHOTO_SERVICE } from '../../infrastructure/infrastructure.module';

@Injectable()
export class MotherboardsService extends BaseParserService {
  // üéØ –¢–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - xsubject –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç Product-Filter-Service
  protected readonly category = 'motherboards';
  
  // üß™ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï: –ú–ò–ö–° –≤–∞–ª–∏–¥–Ω—ã—Ö –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏—Ö –ø–ª–∞—Ç
  protected readonly TEST_QUERIES = [
    // ‚úÖ –í–ê–õ–ò–î–ù–´–ï (–Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏)
    'ASUS ROG STRIX B760-F',
    'MSI MPG B850 GAMING EDGE',
    'GIGABYTE Z790 AORUS ELITE',
    'ASRock X870E Taichi',
    
    // ‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ï (—Å—Ç–∞—Ä—ã–µ –º–æ–¥–µ–ª–∏ + –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π)
    'ASUS B550-F',              // –°—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å
    'MSI B450 TOMAHAWK',        // –°—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å
    '–∫–∞–±–µ–ª—å HDMI',              // –ù–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞
    '–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è 850W',        // –ù–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞
  ];

  constructor(
    @Inject(ProductFilterClient) 
    filterClient: ProductFilterClient,
    @Inject(WB_API_CLIENT)
    wbApiClient: WildberriesApiClient,
    @Inject(PHOTO_SERVICE)
    photoService: PhotoService
  ) {
    super(filterClient, wbApiClient, photoService);
  }

  // –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - –¢–û–õ–¨–ö–û –°–´–†–´–ï –î–ê–ù–ù–´–ï
  async findAllMotherboards(testMode = false) {
    return this.findAllRawProducts(testMode);
  }
} 