#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–∞ rate limiting –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Ozon
"""
import asyncio
import time
from typing import Dict, Optional
from utils.logger import ozon_logger


class ParsingRateLimiter:
    """Rate limiter –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    
    def __init__(self):
        self.last_request_time: Dict[str, float] = {}
        self.min_delay_seconds = 1.0  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        self.max_delay_seconds = 5.0  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
        self.current_delay = self.min_delay_seconds
        self.consecutive_blocks = 0
        self.max_consecutive_blocks = 3
        
    async def wait_before_request(self, query: str) -> None:
        """–ñ–¥–µ—Ç –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–ø—Ä–æ—Å–∞"""
        now = time.time()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        if query in self.last_request_time:
            time_since_last = now - self.last_request_time[query]
            if time_since_last < self.current_delay:
                wait_time = self.current_delay - time_since_last
                ozon_logger.logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {wait_time:.1f}s –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º: {query}")
                await asyncio.sleep(wait_time)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        self.last_request_time[query] = time.time()
    
    def on_request_success(self) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ"""
        # –£–º–µ–Ω—å—à–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø—Ä–∏ —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
        if self.consecutive_blocks > 0:
            self.consecutive_blocks = 0
            self.current_delay = max(self.min_delay_seconds, self.current_delay * 0.8)
            ozon_logger.logger.info(f"‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, —É–º–µ–Ω—å—à–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ {self.current_delay:.1f}s")
    
    def on_request_blocked(self) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞"""
        self.consecutive_blocks += 1
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö
        if self.consecutive_blocks >= self.max_consecutive_blocks:
            self.current_delay = min(self.max_delay_seconds, self.current_delay * 1.5)
            ozon_logger.logger.warning(f"üö´ –ó–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ {self.current_delay:.1f}s")
            self.consecutive_blocks = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    
    def get_current_delay(self) -> float:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∑–∞–¥–µ—Ä–∂–∫—É"""
        return self.current_delay
    
    def reset_delay(self) -> None:
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é"""
        self.current_delay = self.min_delay_seconds
        self.consecutive_blocks = 0
        ozon_logger.logger.info(f"üîÑ –°–±—Ä–æ—Å –∑–∞–¥–µ—Ä–∂–∫–∏ –∫ {self.min_delay_seconds}s")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä rate limiter
parsing_rate_limiter = ParsingRateLimiter() 