#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π Ozon API
"""

import asyncio
from src.infrastructure.services.ozon_parser_service import OzonParserService

async def test_categories():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    categories = {
        "videocards": ("rtx 5070", "videokarty-15721"),
        "processors": ("7800x3d", "protsessory-15726"),
        "motherboards": ("Z790", "materinskie-platy-15725"),
        "playstation": ("playstation 5 pro", "konsoli-playstation-31751/playstation-79966341"),
        "iphone": ("iphone 16 pro", "smartfony-15502/apple-26303000")
    }
    
    parser_service = OzonParserService()
    
    try:
        for category_name, (query, category_slug) in categories.items():
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category_name}")
            print(f"   –ó–∞–ø—Ä–æ—Å: {query}")
            print(f"   Slug: {category_slug}")
            
            try:
                products = await parser_service.parse_products(
                    query=query,
                    category_slug=category_slug
                )
                
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞
                for i, product in enumerate(products[:3]):
                    print(f"     {i+1}. {product.name[:50]}... - {product.price}‚ÇΩ")
                
                if len(products) > 3:
                    print(f"     ... –∏ –µ—â–µ {len(products) - 3} —Ç–æ–≤–∞—Ä–æ–≤")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(2)
            
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        await parser_service.close(force=True)

if __name__ == "__main__":
    asyncio.run(test_categories()) 