#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Ozon API
"""
import grpc
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ proto —Ñ–∞–π–ª–∞–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import raw_product_pb2
import raw_product_pb2_grpc

def test_without_token():
    """–¢–µ—Å—Ç –ë–ï–ó —Ç–æ–∫–µ–Ω–∞ - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å UNAUTHENTICATED"""
    print("üîí –¢–µ—Å—Ç –ë–ï–ó —Ç–æ–∫–µ–Ω–∞...")
    
    with grpc.insecure_channel('localhost:3002') as channel:
        stub = raw_product_pb2_grpc.RawProductServiceStub(channel)
        
        # –ó–∞–ø—Ä–æ—Å –ë–ï–ó —Ç–æ–∫–µ–Ω–∞
        request = raw_product_pb2.GetRawProductsRequest(
            query="test",
            category="test"
        )
        
        try:
            response = stub.GetRawProducts(request)
            print("‚ùå –û–®–ò–ë–ö–ê: –ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª –±–µ–∑ —Ç–æ–∫–µ–Ω–∞!")
            return False
        except grpc.RpcError as e:
            if e.code() == grpc.StatusCode.UNAUTHENTICATED:
                print("‚úÖ –£–°–ü–ï–•: –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ UNAUTHENTICATED (–∫–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)")
                return True
            else:
                print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e.code()} - {e.details()}")
                return False

def test_with_correct_token():
    """–¢–µ—Å—Ç –° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å"""
    print("\nüîë –¢–µ—Å—Ç –° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...")
    
    with grpc.insecure_channel('localhost:3002') as channel:
        stub = raw_product_pb2_grpc.RawProductServiceStub(channel)
        
        # –ó–∞–ø—Ä–æ—Å –° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        request = raw_product_pb2.GetRawProductsRequest(
            query="iphone",
            category="iphone",
            auth_token="marketvision_secret_token_2024"
        )
        
        try:
            response = stub.GetRawProducts(request)
            print("‚úÖ –£–°–ü–ï–•: –ó–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º –ø—Ä–æ—à–µ–ª!")
            print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {response.total_count}")
            return True
        except grpc.RpcError as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {e.code()} - {e.details()}")
            return False

def test_with_wrong_token():
    """–¢–µ—Å—Ç –° –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å UNAUTHENTICATED"""
    print("\nüö´ –¢–µ—Å—Ç –° –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...")
    
    with grpc.insecure_channel('localhost:3002') as channel:
        stub = raw_product_pb2_grpc.RawProductServiceStub(channel)
        
        # –ó–∞–ø—Ä–æ—Å –° –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        request = raw_product_pb2.GetRawProductsRequest(
            query="test",
            category="test",
            auth_token="wrong_token_123"
        )
        
        try:
            response = stub.GetRawProducts(request)
            print("‚ùå –û–®–ò–ë–ö–ê: –ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º!")
            return False
        except grpc.RpcError as e:
            if e.code() == grpc.StatusCode.UNAUTHENTICATED:
                print("‚úÖ –£–°–ü–ï–•: –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ UNAUTHENTICATED (–∫–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)")
                return True
            else:
                print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e.code()} - {e.details()}")
                return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Ozon API")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    test1 = test_without_token()
    test2 = test_with_correct_token()
    test3 = test_with_wrong_token()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ë–µ–∑ —Ç–æ–∫–µ–Ω–∞: {'‚úÖ –ü–†–û–®–ï–õ' if test1 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"–° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: {'‚úÖ –ü–†–û–®–ï–õ' if test2 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"–° –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: {'‚úÖ –ü–†–û–®–ï–õ' if test3 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    
    if test1 and test2 and test3:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò! –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\nüí• –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´! –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é!") 