import TelegramBot from 'node-telegram-bot-api';
import { devCommand } from './commands/dev.command';
import { AdminCommand } from './commands/admin.command';
import { createScheduler } from './register-services';
import { DevUtils } from './utils/dev.utils';
// import { cpusCommand } from './commands/cpus.command'; // –ø—Ä–∏–º–µ—Ä –¥–ª—è –±—É–¥—É—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π

// –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ –º–µ—Ä–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
interface Services {
  postQueue: any;
  videocards: any;
  processors: any;
  motherboards: any;
}

let scheduler: any = null;

export function registerCommands(bot: TelegramBot, services: Services) {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è scheduler
  const createSchedulerForAdmin = (chatId: string) => {
    if (!scheduler) {
      scheduler = createScheduler(bot, chatId, services);
    }
    return scheduler;
  };

  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
  const adminCommand = new AdminCommand(bot, createSchedulerForAdmin);
  
  // Dev –∫–æ–º–∞–Ω–¥—ã (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
  if (DevUtils.isDev()) {
    devCommand(bot, services);
    console.log('üîß Dev –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
  }
  
  // üéØ –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
  bot.onText(/\/admin(_\w+)?/, async (msg) => {
    await adminCommand.handleCommand(msg);
  });

  // üéØ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App (–¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º)
  bot.onText(/\/app/, async (msg) => {
    await adminCommand.handleCommand(msg);
  });

  // üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
  bot.on('callback_query', async (callbackQuery) => {
    const data = callbackQuery.data;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω—Å–∫–∏–π callback
    if (data && data.startsWith('admin_')) {
      await adminCommand.handleCallback(callbackQuery);
    }
  });

  // üö´ –ò–ì–ù–û–†–ò–†–£–ï–ú –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  bot.onText(/\/.*/, async (msg) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
    if (!msg.from) return;
    const userId = msg.from.id.toString();
    if (userId === '69884361') {
      // –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –∫–æ–º–∞–Ω–¥—ã
      return;
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    console.log(`üö´ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${msg.text}`);
  });

  // üö´ –ò–ì–ù–û–†–ò–†–£–ï–ú –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  bot.on('message', async (msg) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
    if (!msg.from) return;
    const userId = msg.from.id.toString();
    if (userId === '69884361') {
      // –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
      return;
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if (msg.text && !msg.text.startsWith('/')) {
      console.log(`üö´ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${msg.text}`);
    }
  });
} 