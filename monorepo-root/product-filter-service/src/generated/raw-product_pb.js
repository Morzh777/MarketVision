// source: raw-product.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.raw_product.BatchCreateProductsRequest', null, global);
goog.exportSymbol('proto.raw_product.BatchCreateProductsResponse', null, global);
goog.exportSymbol('proto.raw_product.Category', null, global);
goog.exportSymbol('proto.raw_product.GetCategoryConfigRequest', null, global);
goog.exportSymbol('proto.raw_product.GetCategoryConfigResponse', null, global);
goog.exportSymbol('proto.raw_product.GetQueriesForCategoryRequest', null, global);
goog.exportSymbol('proto.raw_product.GetQueriesForCategoryResponse', null, global);
goog.exportSymbol('proto.raw_product.GetRawProductsRequest', null, global);
goog.exportSymbol('proto.raw_product.GetRawProductsResponse', null, global);
goog.exportSymbol('proto.raw_product.MarketStats', null, global);
goog.exportSymbol('proto.raw_product.QueryConfig', null, global);
goog.exportSymbol('proto.raw_product.RawProduct', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetRawProductsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.GetRawProductsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetRawProductsRequest.displayName = 'proto.raw_product.GetRawProductsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.RawProduct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.RawProduct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.RawProduct.displayName = 'proto.raw_product.RawProduct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetRawProductsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw_product.GetRawProductsResponse.repeatedFields_, null);
};
goog.inherits(proto.raw_product.GetRawProductsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetRawProductsResponse.displayName = 'proto.raw_product.GetRawProductsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.MarketStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw_product.MarketStats.repeatedFields_, null);
};
goog.inherits(proto.raw_product.MarketStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.MarketStats.displayName = 'proto.raw_product.MarketStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.BatchCreateProductsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw_product.BatchCreateProductsRequest.repeatedFields_, null);
};
goog.inherits(proto.raw_product.BatchCreateProductsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.BatchCreateProductsRequest.displayName = 'proto.raw_product.BatchCreateProductsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.BatchCreateProductsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.BatchCreateProductsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.BatchCreateProductsResponse.displayName = 'proto.raw_product.BatchCreateProductsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetCategoryConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.GetCategoryConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetCategoryConfigRequest.displayName = 'proto.raw_product.GetCategoryConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.Category.displayName = 'proto.raw_product.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetCategoryConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.GetCategoryConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetCategoryConfigResponse.displayName = 'proto.raw_product.GetCategoryConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetQueriesForCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.GetQueriesForCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetQueriesForCategoryRequest.displayName = 'proto.raw_product.GetQueriesForCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.QueryConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw_product.QueryConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.QueryConfig.displayName = 'proto.raw_product.QueryConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw_product.GetQueriesForCategoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw_product.GetQueriesForCategoryResponse.repeatedFields_, null);
};
goog.inherits(proto.raw_product.GetQueriesForCategoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw_product.GetQueriesForCategoryResponse.displayName = 'proto.raw_product.GetQueriesForCategoryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetRawProductsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetRawProductsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetRawProductsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetRawProductsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    platformId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exactmodels: jspb.Message.getFieldWithDefault(msg, 4, ""),
    authToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetRawProductsRequest}
 */
proto.raw_product.GetRawProductsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetRawProductsRequest;
  return proto.raw_product.GetRawProductsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetRawProductsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetRawProductsRequest}
 */
proto.raw_product.GetRawProductsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExactmodels(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetRawProductsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetRawProductsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetRawProductsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetRawProductsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlatformId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExactmodels();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAuthToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.raw_product.GetRawProductsRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsRequest} returns this
 */
proto.raw_product.GetRawProductsRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.raw_product.GetRawProductsRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsRequest} returns this
 */
proto.raw_product.GetRawProductsRequest.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string platform_id = 3;
 * @return {string}
 */
proto.raw_product.GetRawProductsRequest.prototype.getPlatformId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsRequest} returns this
 */
proto.raw_product.GetRawProductsRequest.prototype.setPlatformId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string exactmodels = 4;
 * @return {string}
 */
proto.raw_product.GetRawProductsRequest.prototype.getExactmodels = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsRequest} returns this
 */
proto.raw_product.GetRawProductsRequest.prototype.setExactmodels = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string auth_token = 5;
 * @return {string}
 */
proto.raw_product.GetRawProductsRequest.prototype.getAuthToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsRequest} returns this
 */
proto.raw_product.GetRawProductsRequest.prototype.setAuthToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.RawProduct.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.RawProduct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.RawProduct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.RawProduct.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFieldWithDefault(msg, 3, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    productUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    category: jspb.Message.getFieldWithDefault(msg, 6, ""),
    source: jspb.Message.getFieldWithDefault(msg, 7, ""),
    query: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.RawProduct}
 */
proto.raw_product.RawProduct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.RawProduct;
  return proto.raw_product.RawProduct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.RawProduct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.RawProduct}
 */
proto.raw_product.RawProduct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.RawProduct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.RawProduct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.RawProduct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.RawProduct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProductUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 price = 3;
 * @return {number}
 */
proto.raw_product.RawProduct.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string image_url = 4;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string product_url = 5;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getProductUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setProductUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string category = 6;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string source = 7;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string query = 8;
 * @return {string}
 */
proto.raw_product.RawProduct.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.RawProduct} returns this
 */
proto.raw_product.RawProduct.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw_product.GetRawProductsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetRawProductsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetRawProductsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetRawProductsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetRawProductsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.raw_product.RawProduct.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    source: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetRawProductsResponse}
 */
proto.raw_product.GetRawProductsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetRawProductsResponse;
  return proto.raw_product.GetRawProductsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetRawProductsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetRawProductsResponse}
 */
proto.raw_product.GetRawProductsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.raw_product.RawProduct;
      reader.readMessage(value,proto.raw_product.RawProduct.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetRawProductsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetRawProductsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetRawProductsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetRawProductsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.raw_product.RawProduct.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated RawProduct products = 1;
 * @return {!Array<!proto.raw_product.RawProduct>}
 */
proto.raw_product.GetRawProductsResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.raw_product.RawProduct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.raw_product.RawProduct, 1));
};


/**
 * @param {!Array<!proto.raw_product.RawProduct>} value
 * @return {!proto.raw_product.GetRawProductsResponse} returns this
*/
proto.raw_product.GetRawProductsResponse.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.raw_product.RawProduct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.raw_product.RawProduct}
 */
proto.raw_product.GetRawProductsResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.raw_product.RawProduct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw_product.GetRawProductsResponse} returns this
 */
proto.raw_product.GetRawProductsResponse.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.raw_product.GetRawProductsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.GetRawProductsResponse} returns this
 */
proto.raw_product.GetRawProductsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.raw_product.GetRawProductsResponse.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetRawProductsResponse} returns this
 */
proto.raw_product.GetRawProductsResponse.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw_product.MarketStats.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.MarketStats.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.MarketStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.MarketStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.MarketStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    min: jspb.Message.getFieldWithDefault(msg, 4, 0),
    max: jspb.Message.getFieldWithDefault(msg, 5, 0),
    mean: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    median: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    iqrList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    totalCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    productId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.MarketStats}
 */
proto.raw_product.MarketStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.MarketStats;
  return proto.raw_product.MarketStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.MarketStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.MarketStats}
 */
proto.raw_product.MarketStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMean(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMedian(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIqr(values[i]);
      }
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.MarketStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.MarketStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.MarketStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.MarketStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMean();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMedian();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getIqrList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.raw_product.MarketStats.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.raw_product.MarketStats.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.raw_product.MarketStats.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 min = 4;
 * @return {number}
 */
proto.raw_product.MarketStats.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setMin = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 max = 5;
 * @return {number}
 */
proto.raw_product.MarketStats.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float mean = 6;
 * @return {number}
 */
proto.raw_product.MarketStats.prototype.getMean = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setMean = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float median = 7;
 * @return {number}
 */
proto.raw_product.MarketStats.prototype.getMedian = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setMedian = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * repeated int32 iqr = 8;
 * @return {!Array<number>}
 */
proto.raw_product.MarketStats.prototype.getIqrList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setIqrList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.addIqr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.clearIqrList = function() {
  return this.setIqrList([]);
};


/**
 * optional int32 total_count = 9;
 * @return {number}
 */
proto.raw_product.MarketStats.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string product_id = 10;
 * @return {string}
 */
proto.raw_product.MarketStats.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.raw_product.MarketStats.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.MarketStats} returns this
 */
proto.raw_product.MarketStats.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw_product.BatchCreateProductsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.BatchCreateProductsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.BatchCreateProductsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.BatchCreateProductsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.raw_product.RawProduct.toObject, includeInstance),
    marketStats: (f = msg.getMarketStats()) && proto.raw_product.MarketStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.BatchCreateProductsRequest}
 */
proto.raw_product.BatchCreateProductsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.BatchCreateProductsRequest;
  return proto.raw_product.BatchCreateProductsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.BatchCreateProductsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.BatchCreateProductsRequest}
 */
proto.raw_product.BatchCreateProductsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.raw_product.RawProduct;
      reader.readMessage(value,proto.raw_product.RawProduct.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = new proto.raw_product.MarketStats;
      reader.readMessage(value,proto.raw_product.MarketStats.deserializeBinaryFromReader);
      msg.setMarketStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.BatchCreateProductsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.BatchCreateProductsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.BatchCreateProductsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.raw_product.RawProduct.serializeBinaryToWriter
    );
  }
  f = message.getMarketStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.raw_product.MarketStats.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RawProduct products = 1;
 * @return {!Array<!proto.raw_product.RawProduct>}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.raw_product.RawProduct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.raw_product.RawProduct, 1));
};


/**
 * @param {!Array<!proto.raw_product.RawProduct>} value
 * @return {!proto.raw_product.BatchCreateProductsRequest} returns this
*/
proto.raw_product.BatchCreateProductsRequest.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.raw_product.RawProduct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.raw_product.RawProduct}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.raw_product.RawProduct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw_product.BatchCreateProductsRequest} returns this
 */
proto.raw_product.BatchCreateProductsRequest.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional MarketStats market_stats = 2;
 * @return {?proto.raw_product.MarketStats}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.getMarketStats = function() {
  return /** @type{?proto.raw_product.MarketStats} */ (
    jspb.Message.getWrapperField(this, proto.raw_product.MarketStats, 2));
};


/**
 * @param {?proto.raw_product.MarketStats|undefined} value
 * @return {!proto.raw_product.BatchCreateProductsRequest} returns this
*/
proto.raw_product.BatchCreateProductsRequest.prototype.setMarketStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw_product.BatchCreateProductsRequest} returns this
 */
proto.raw_product.BatchCreateProductsRequest.prototype.clearMarketStats = function() {
  return this.setMarketStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw_product.BatchCreateProductsRequest.prototype.hasMarketStats = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.BatchCreateProductsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.BatchCreateProductsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.BatchCreateProductsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.BatchCreateProductsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inserted: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.BatchCreateProductsResponse}
 */
proto.raw_product.BatchCreateProductsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.BatchCreateProductsResponse;
  return proto.raw_product.BatchCreateProductsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.BatchCreateProductsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.BatchCreateProductsResponse}
 */
proto.raw_product.BatchCreateProductsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInserted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.BatchCreateProductsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.BatchCreateProductsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.BatchCreateProductsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.BatchCreateProductsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInserted();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 inserted = 1;
 * @return {number}
 */
proto.raw_product.BatchCreateProductsResponse.prototype.getInserted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.raw_product.BatchCreateProductsResponse} returns this
 */
proto.raw_product.BatchCreateProductsResponse.prototype.setInserted = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetCategoryConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetCategoryConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetCategoryConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetCategoryConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorykey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetCategoryConfigRequest}
 */
proto.raw_product.GetCategoryConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetCategoryConfigRequest;
  return proto.raw_product.GetCategoryConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetCategoryConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetCategoryConfigRequest}
 */
proto.raw_product.GetCategoryConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategorykey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetCategoryConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetCategoryConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetCategoryConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetCategoryConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorykey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string categoryKey = 1;
 * @return {string}
 */
proto.raw_product.GetCategoryConfigRequest.prototype.getCategorykey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetCategoryConfigRequest} returns this
 */
proto.raw_product.GetCategoryConfigRequest.prototype.setCategorykey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    display: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ozonId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    wbId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.Category}
 */
proto.raw_product.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.Category;
  return proto.raw_product.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.Category}
 */
proto.raw_product.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplay(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOzonId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWbId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplay();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOzonId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWbId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.raw_product.Category.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.Category} returns this
 */
proto.raw_product.Category.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display = 2;
 * @return {string}
 */
proto.raw_product.Category.prototype.getDisplay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.Category} returns this
 */
proto.raw_product.Category.prototype.setDisplay = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ozon_id = 3;
 * @return {string}
 */
proto.raw_product.Category.prototype.getOzonId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.Category} returns this
 */
proto.raw_product.Category.prototype.setOzonId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string wb_id = 4;
 * @return {string}
 */
proto.raw_product.Category.prototype.getWbId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.Category} returns this
 */
proto.raw_product.Category.prototype.setWbId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetCategoryConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetCategoryConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetCategoryConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetCategoryConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: (f = msg.getCategory()) && proto.raw_product.Category.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetCategoryConfigResponse}
 */
proto.raw_product.GetCategoryConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetCategoryConfigResponse;
  return proto.raw_product.GetCategoryConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetCategoryConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetCategoryConfigResponse}
 */
proto.raw_product.GetCategoryConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.raw_product.Category;
      reader.readMessage(value,proto.raw_product.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetCategoryConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetCategoryConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetCategoryConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetCategoryConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.raw_product.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional Category category = 1;
 * @return {?proto.raw_product.Category}
 */
proto.raw_product.GetCategoryConfigResponse.prototype.getCategory = function() {
  return /** @type{?proto.raw_product.Category} */ (
    jspb.Message.getWrapperField(this, proto.raw_product.Category, 1));
};


/**
 * @param {?proto.raw_product.Category|undefined} value
 * @return {!proto.raw_product.GetCategoryConfigResponse} returns this
*/
proto.raw_product.GetCategoryConfigResponse.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw_product.GetCategoryConfigResponse} returns this
 */
proto.raw_product.GetCategoryConfigResponse.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw_product.GetCategoryConfigResponse.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetQueriesForCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetQueriesForCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetQueriesForCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetQueriesForCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorykey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetQueriesForCategoryRequest}
 */
proto.raw_product.GetQueriesForCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetQueriesForCategoryRequest;
  return proto.raw_product.GetQueriesForCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetQueriesForCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetQueriesForCategoryRequest}
 */
proto.raw_product.GetQueriesForCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategorykey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetQueriesForCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetQueriesForCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetQueriesForCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetQueriesForCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorykey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string categoryKey = 1;
 * @return {string}
 */
proto.raw_product.GetQueriesForCategoryRequest.prototype.getCategorykey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.GetQueriesForCategoryRequest} returns this
 */
proto.raw_product.GetQueriesForCategoryRequest.prototype.setCategorykey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.QueryConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.QueryConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.QueryConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.QueryConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exactmodels: jspb.Message.getFieldWithDefault(msg, 3, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.QueryConfig}
 */
proto.raw_product.QueryConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.QueryConfig;
  return proto.raw_product.QueryConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.QueryConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.QueryConfig}
 */
proto.raw_product.QueryConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExactmodels(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.QueryConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.QueryConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.QueryConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.QueryConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExactmodels();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.raw_product.QueryConfig.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.QueryConfig} returns this
 */
proto.raw_product.QueryConfig.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string platform_id = 2;
 * @return {string}
 */
proto.raw_product.QueryConfig.prototype.getPlatformId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.QueryConfig} returns this
 */
proto.raw_product.QueryConfig.prototype.setPlatformId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string exactmodels = 3;
 * @return {string}
 */
proto.raw_product.QueryConfig.prototype.getExactmodels = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.QueryConfig} returns this
 */
proto.raw_product.QueryConfig.prototype.setExactmodels = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string platform = 4;
 * @return {string}
 */
proto.raw_product.QueryConfig.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw_product.QueryConfig} returns this
 */
proto.raw_product.QueryConfig.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw_product.GetQueriesForCategoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw_product.GetQueriesForCategoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.raw_product.GetQueriesForCategoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw_product.GetQueriesForCategoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetQueriesForCategoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.raw_product.QueryConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw_product.GetQueriesForCategoryResponse}
 */
proto.raw_product.GetQueriesForCategoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw_product.GetQueriesForCategoryResponse;
  return proto.raw_product.GetQueriesForCategoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw_product.GetQueriesForCategoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw_product.GetQueriesForCategoryResponse}
 */
proto.raw_product.GetQueriesForCategoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.raw_product.QueryConfig;
      reader.readMessage(value,proto.raw_product.QueryConfig.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw_product.GetQueriesForCategoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw_product.GetQueriesForCategoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw_product.GetQueriesForCategoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw_product.GetQueriesForCategoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.raw_product.QueryConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryConfig queries = 1;
 * @return {!Array<!proto.raw_product.QueryConfig>}
 */
proto.raw_product.GetQueriesForCategoryResponse.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.raw_product.QueryConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.raw_product.QueryConfig, 1));
};


/**
 * @param {!Array<!proto.raw_product.QueryConfig>} value
 * @return {!proto.raw_product.GetQueriesForCategoryResponse} returns this
*/
proto.raw_product.GetQueriesForCategoryResponse.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.raw_product.QueryConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.raw_product.QueryConfig}
 */
proto.raw_product.GetQueriesForCategoryResponse.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.raw_product.QueryConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw_product.GetQueriesForCategoryResponse} returns this
 */
proto.raw_product.GetQueriesForCategoryResponse.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};


goog.object.extend(exports, proto.raw_product);
