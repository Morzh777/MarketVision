// üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô –ò –ü–õ–ê–¢–§–û–†–ú
// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

import { CategoryConfig } from '../services/interfaces/category-config.interface';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤
export const CATEGORY_NAMES = {
  VIDEOCARDS: 'videocards',
  PROCESSORS: 'processors',
  MOTHERBOARDS: 'motherboards',
  PLAYSTATION: 'playstation',
  NINTENDO_SWITCH: 'nintendo_switch',
  STEAM_DECK: 'steam_deck',
  IPHONE: 'iphone'
} as const;

export const CATEGORIES: Record<string, CategoryConfig> = {
  [CATEGORY_NAMES.VIDEOCARDS]: {
    ozon: 'videokarty-15721',
    wb: '3274'
  },
  [CATEGORY_NAMES.PROCESSORS]: {
    ozon: 'protsessory-15726',
    wb: '3698'
  },
  [CATEGORY_NAMES.MOTHERBOARDS]: {
    ozon: 'materinskie-platy-15725',
    wb: '3690'
  },
  [CATEGORY_NAMES.PLAYSTATION]: {
    ozon: 'konsoli-playstation-31751/playstation-79966341',
    wb: '8829'
  },
  playstation_accessories: {
    ozon: 'aksessuary-dlya-igrovyh-pristavok-15810',
    wb: '5923'
  },
  [CATEGORY_NAMES.NINTENDO_SWITCH]: {
    ozon: 'igrovye-pristavki-15801/nintendo-26667979',
    wb: '523'
  },
  [CATEGORY_NAMES.STEAM_DECK]: {
    ozon: 'igrovye-pristavki-15801/valve-84099638',
    wb: '523'
  },
  [CATEGORY_NAMES.IPHONE]: {
    ozon: 'smartfony-15502/apple-26303000',
    wb: '515' // –ø—Ä–∏–º–µ—Ä–Ω—ã–π WB id, –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –µ—Å–ª–∏ –µ—Å—Ç—å
  },
};

// –ß–µ–ª–æ–≤–µ–∫–æ‚Äë—á–∏—Ç–∞–µ–º—ã–µ (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ) –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const CATEGORY_DISPLAY: Record<string, string> = {
  [CATEGORY_NAMES.PLAYSTATION]: 'PlayStation',
  [CATEGORY_NAMES.NINTENDO_SWITCH]: 'Nintendo Switch',
  [CATEGORY_NAMES.STEAM_DECK]: 'Steam Deck',
  [CATEGORY_NAMES.IPHONE]: 'iPhone',
  [CATEGORY_NAMES.VIDEOCARDS]: '–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã',
  [CATEGORY_NAMES.PROCESSORS]: '–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã',
  [CATEGORY_NAMES.MOTHERBOARDS]: '–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã',
};

// üîó –ì–†–£–ü–ü–´ –ê–ì–†–ï–ì–ò–†–û–í–ê–ù–ù–´–• –ö–ê–¢–ï–ì–û–†–ò–ô (—É–¥–æ–±–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
// –∫–ª—é—á ‚Äî —á–µ–ª–æ–≤–µ–∫–æ‚Äë—á–∏—Ç–∞–µ–º–æ–µ –∏–º—è, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –ª–∏—Å—Ç–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
const MAIN_CATEGORIES: Record<string, string[]> = {
  '–ò–≥—Ä–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏': [
    CATEGORY_NAMES.PLAYSTATION,
    CATEGORY_NAMES.NINTENDO_SWITCH,
    CATEGORY_NAMES.STEAM_DECK
  ],
  '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã': [CATEGORY_NAMES.IPHONE]
};

// üéÆ –ü–õ–ê–¢–§–û–†–ú–´ –î–õ–Ø –ö–û–ù–ö–†–ï–¢–ù–´–• –ó–ê–ü–†–û–°–û–í –æ–∑–æ–Ω
export const QUERY_PLATFORMS: Record<string, string> = {
  'nintendo switch 2': '101858153',
  'nintendo switch oled': '101858153',
};

// üéØ –ú–û–î–ï–õ–ò –î–õ–Ø –ö–û–ù–ö–†–ï–¢–ù–´–• –ó–ê–ü–†–û–°–û–í (exactmodels)
export const QUERY_EXACTMODELS: Record<string, string> = {
  'iphone 16 pro': '101218714',
  'iphone 15 pro': '100973685',
}
// üîß –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ï–ô
export class CategoryConfigService {
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  static getCategoryConfig(category: string): CategoryConfig | undefined {
    return CATEGORIES[category];
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
   */
  static getPlatformForQuery(query: string): string | undefined {
    return QUERY_PLATFORMS[query];
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å Ozon –∫–∞—Ç–µ–≥–æ—Ä–∏—é
   */
  static getOzonCategory(category: string): string | undefined {
    return CATEGORIES[category]?.ozon;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å WB –∫–∞—Ç–µ–≥–æ—Ä–∏—é
   */
  static getWbCategory(category: string): string | undefined {
    return CATEGORIES[category]?.wb;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  static hasCategory(category: string): boolean {
    return category in CATEGORIES;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  static getAllCategories(): string[] {
    return Object.keys(CATEGORIES);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏
   */
  static getQueriesWithPlatforms(): string[] {
    return Object.keys(QUERY_PLATFORMS);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å exactmodels –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
   */
  static getExactModelsForQuery(query: string): string | undefined {
    return QUERY_EXACTMODELS[query];
  }

  /** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ (RU/—á–µ–ª–æ–≤–µ–∫–æ‚Äë—á–∏—Ç–∞–µ–º–æ–µ) –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
  static getCategoryDisplay(category: string | undefined): string | undefined {
    if (!category) return undefined;
    const c = category.toLowerCase();
    return CATEGORY_DISPLAY[c] ?? category;
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
   * –ü—Ä–∏–º–µ—Ä—ã:
   * - playstation, nintendo_switch, steam_deck -> "–ò–≥—Ä–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏"
   * - iphone -> "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã"
   */
  static getSuperCategoryDisplay(category: string | undefined): string | undefined {
    if (!category) return undefined;
    const c = category.toLowerCase();
    for (const [display, items] of Object.entries(MAIN_CATEGORIES)) {
      if (items.includes(c)) return display;
    }
    return undefined;
  }

  /**
   * –£–¥–æ–±–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ª–∏—Å—Ç–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ
   * –ü—Ä–∏–º–µ—Ä: addToSuperCategory('–ò–≥—Ä–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏', 'xbox')
   */
  static addToSuperCategory(display: string, ...categories: string[]): void {
    const existing = MAIN_CATEGORIES[display] || [];
    const toAdd = categories.map((c) => c.toLowerCase());
    MAIN_CATEGORIES[display] = Array.from(new Set([...existing, ...toAdd]));
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   * –ü—Ä–∏–º–µ—Ä: setSuperCategoryGroup('–ü–ª–∞–Ω—à–µ—Ç—ã', ['ipad', 'galaxy_tab'])
   */
  static setSuperCategoryGroup(display: string, categories: string[]): void {
    MAIN_CATEGORIES[display] = Array.from(new Set(categories.map((c) => c.toLowerCase())));
  }
} 