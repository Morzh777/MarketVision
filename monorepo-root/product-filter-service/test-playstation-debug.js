const { PlaystationValidator } = require('./dist/src/services/validation.service/category/playstation.validator');

async function testPlaystationValidator() {
  const validator = new PlaystationValidator();
  
  const testCases = [
    // PS5 Pro - –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏
    {
      name: "–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å PlayStation 5 Pro",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "Playstation 5 Pro",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ PlayStation 5 Pro Digital Edition 2–¢–ë",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "PlayStation 5 Pro Digital Edition,2000 –ì–ë SSD+ 2 –≥–µ–π–º–ø–∞–¥–∞",
      query: "playstation 5 pro",
      expected: true
    },
    
    // PS5 - –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏
    {
      name: "–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ PlayStation 5 Slim Digital Edition",
      query: "playstation 5",
      expected: true
    },
    {
      name: "–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å PlayStation 5 Slim Blu-Ray CFI-2000A –Ø–ø–æ–Ω–∏—è",
      query: "playstation 5",
      expected: true
    },
    {
      name: "PlayStation 5",
      query: "playstation 5",
      expected: true
    },
    
    // –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã
    {
      name: "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä PlayStation 5 DualSense",
      query: "playstation 5",
      expected: false
    },
    {
      name: "–ó–∞—Ä—è–¥–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è DualSense –¥–ª—è PS 5",
      query: "playstation 5",
      expected: false
    },
    {
      name: "–ü–æ–¥—Å—Ç–∞–≤–∫–∞ –¥–ª—è PS5 –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–∞",
      query: "playstation 5",
      expected: false
    },
    {
      name: "PS5 Pro Slim –°—Ç–∞–Ω—Ü–∏—è –∑–∞—Ä—è–¥–∞ —Å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "PS5 Pro",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "PS5 + Pro Controller",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "Playstation 5 Pro",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "PS5 Pro",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "playstation5pro",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "ps5 pro",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "ps5pro",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "PS5 Pro Slim",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "PS5 Pro 2",
      query: "playstation 5 pro",
      expected: true
    },
    {
      name: "PS5 Pro Slim",
      query: "playstation 5 pro",
      expected: false
    },
    {
      name: "PS5 Pro –°—Ç–∞–Ω—Ü–∏—è –∑–∞—Ä—è–¥–∞",
      query: "playstation 5 pro",
      expected: false
    }
  ];

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PlayStation Validator\n');

  for (const testCase of testCases) {
    console.log(`\nüì¶ –¢–µ—Å—Ç: "${testCase.name}"`);
    console.log(`üîç –ó–∞–ø—Ä–æ—Å: "${testCase.query}"`);
    
    const result = await validator.validateSingleProduct(testCase.query, testCase.name, 'playstation');
    
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result.isValid ? '–ü–†–û–®–ï–õ' : '–û–¢–ö–õ–û–ù–ï–ù'} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${testCase.expected ? '–ü–†–û–®–ï–õ' : '–û–¢–ö–õ–û–ù–ï–ù'})`);
    console.log(`üìù –ü—Ä–∏—á–∏–Ω–∞: ${result.reason}`);
    console.log(`üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidence}`);
    
    if (result.isValid !== testCase.expected) {
      console.log(`‚ùå –û–®–ò–ë–ö–ê: –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—é!`);
    } else {
      console.log(`‚úÖ –£–°–ü–ï–•: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—é`);
    }
  }
}

testPlaystationValidator().catch(console.error); 