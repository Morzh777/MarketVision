const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3001';

async function testExtendedStatistics() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...\n');

  try {
    // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É
    console.log('üìä 1. –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞:');
    const today = new Date().toISOString().split('T')[0];
    const dailySummary = await fetch(`${BASE_URL}/price-statistics/daily-summary/${today}`);
    const dailyData = await dailySummary.json();
    console.log('‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞:', JSON.stringify(dailyData, null, 2));

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüìà 2. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:');
    const currentWeek = getWeekKey(new Date());
    const weeklyReport = await fetch(`${BASE_URL}/price-statistics/weekly-report/${currentWeek}`);
    const weeklyData = await weeklyReport.json();
    console.log('‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:', JSON.stringify(weeklyData, null, 2));

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüìÖ 3. –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç:');
    const currentYear = new Date().getFullYear();
    const currentMonth = new Date().getMonth() + 1;
    const monthlyReport = await fetch(`${BASE_URL}/price-statistics/monthly-report/${currentYear}/${currentMonth}`);
    const monthlyData = await monthlyReport.json();
    console.log('‚úÖ –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç:', JSON.stringify(monthlyData, null, 2));

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
    console.log('\nüí° 4. –†—ã–Ω–æ—á–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã:');
    const marketInsights = await fetch(`${BASE_URL}/price-statistics/market-insights`);
    const insightsData = await marketInsights.json();
    console.log('‚úÖ –†—ã–Ω–æ—á–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã:', JSON.stringify(insightsData, null, 2));

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª—ã–º –ø–µ—Ä–∏–æ–¥–æ–º
    console.log('\nüìä 5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª—ã–º –ø–µ—Ä–∏–æ–¥–æ–º:');
    const comparison = await fetch(`${BASE_URL}/price-statistics/comparison/${currentWeek}`);
    const comparisonData = await comparison.json();
    console.log('‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:', JSON.stringify(comparisonData, null, 2));

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –±–æ—Ç–∞
    console.log('\nü§ñ 6. –í—Å–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –±–æ—Ç–∞:');
    const botReports = await fetch(`${BASE_URL}/price-statistics/bot-reports`);
    const botData = await botReports.json();
    console.log('‚úÖ –û—Ç—á–µ—Ç—ã –¥–ª—è –±–æ—Ç–∞:', JSON.stringify(botData, null, 2));

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

function getWeekKey(date) {
  const year = date.getFullYear();
  const startOfYear = new Date(year, 0, 1);
  const days = Math.floor((date.getTime() - startOfYear.getTime()) / (24 * 60 * 60 * 1000));
  const weekNumber = Math.ceil((days + startOfYear.getDay() + 1) / 7);
  return `${year}-W${weekNumber.toString().padStart(2, '0')}`;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testExtendedStatistics(); 