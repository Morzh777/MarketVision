const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
function viewLogs(lines = 100) {
  const logsDir = path.join(__dirname, 'logs');
  const today = new Date().toISOString().split('T')[0];
  const logFile = path.join(logsDir, `product-filter-${today}.log`);
  
  if (!fs.existsSync(logFile)) {
    console.log(`‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${logFile}`);
    return;
  }
  
  const content = fs.readFileSync(logFile, 'utf8');
  const linesArray = content.split('\n');
  
  console.log(`üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${lines} —Å—Ç—Ä–æ–∫ –∏–∑ –ª–æ–≥–∞:`);
  console.log(`üìÅ –§–∞–π–ª: ${logFile}`);
  console.log('='.repeat(80));
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
  const lastLines = linesArray.slice(-lines);
  lastLines.forEach(line => {
    if (line.trim()) {
      console.log(line);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –ª–æ–≥–∞—Ö
function searchLogs(searchTerm) {
  const logsDir = path.join(__dirname, 'logs');
  const today = new Date().toISOString().split('T')[0];
  const logFile = path.join(logsDir, `product-filter-${today}.log`);
  
  if (!fs.existsSync(logFile)) {
    console.log(`‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${logFile}`);
    return;
  }
  
  const content = fs.readFileSync(logFile, 'utf8');
  const lines = content.split('\n');
  
  console.log(`üîç –ü–æ–∏—Å–∫ "${searchTerm}" –≤ –ª–æ–≥–∞—Ö:`);
  console.log(`üìÅ –§–∞–π–ª: ${logFile}`);
  console.log('='.repeat(80));
  
  lines.forEach((line, index) => {
    if (line.toLowerCase().includes(searchTerm.toLowerCase())) {
      console.log(`[${index + 1}] ${line}`);
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);

if (args.length === 0) {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫
  viewLogs(50);
} else if (args[0] === '--search' && args[1]) {
  // –ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö
  searchLogs(args[1]);
} else if (args[0] === '--lines' && args[1]) {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
  viewLogs(parseInt(args[1]));
} else {
  console.log('üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('  node view-logs.js                    - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫');
  console.log('  node view-logs.js --lines 100        - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫');
  console.log('  node view-logs.js --search "RTX 5090" - –Ω–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫–∏ —Å "RTX 5090"');
} 