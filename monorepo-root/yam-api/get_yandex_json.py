import json
import time
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

def get_yandex_json(url):
    """–ü–æ–ª—É—á–∏—Ç—å JSON –æ—Ç –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã
    options = uc.ChromeOptions()
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--disable-web-security")
    options.add_argument("--disable-features=VizDisplayCompositor")
    options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º headless –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –≤—ã —É–≤–∏–¥–∏—Ç–µ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    # options.add_argument("--headless=new")
    
    driver = uc.Chrome(options=options)
    
    try:
        print(f"üì° –ó–∞–≥—Ä—É–∂–∞–µ–º URL: {url[:100]}...")
        driver.get(url)
        
        print("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        time.sleep(8)  # –î–∞–µ–º –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–∞–ø—á—É
        try:
            captcha_element = driver.find_element(By.CSS_SELECTOR, '[class*="captcha"], [class*="Captcha"], [id*="captcha"]')
            if captcha_element:
                print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞! –ñ–¥–µ–º —Ä—É—á–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è...")
                print("üîç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ—à–∏—Ç–µ –∫–∞–ø—á—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter...")
                input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –∫–∞–ø—á–∏: ")
        except:
            print("‚úÖ –ö–∞–ø—á–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
        
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìú –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")
        for i in range(3):
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(2)
        
        # –ò—â–µ–º JSON –¥–∞–Ω–Ω—ã–µ –≤ —Å–µ—Ç–∏
        print("üîç –ò—â–µ–º JSON –¥–∞–Ω–Ω—ã–µ...")
        
        # –°–ø–æ—Å–æ–± 1: –ò—â–µ–º –≤ —Ç–µ–≥–µ <pre> –∏–ª–∏ <script>
        json_text = None
        
        try:
            # –ò—â–µ–º –≤ —Ç–µ–≥–µ <pre>
            pre_elements = driver.find_elements(By.TAG_NAME, "pre")
            for pre in pre_elements:
                text = pre.text.strip()
                if text.startswith("{") or text.startswith("["):
                    json_text = text
                    print("‚úÖ JSON –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–≥–µ <pre>")
                    break
        except:
            pass
        
        if not json_text:
            try:
                # –ò—â–µ–º –≤ —Ç–µ–≥–∞—Ö <script>
                script_elements = driver.find_elements(By.TAG_NAME, "script")
                for script in script_elements:
                    content = script.get_attribute("innerHTML")
                    if content and ("window.__INITIAL_STATE__" in content or "window.__DATA__" in content):
                        print("‚úÖ –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∏–ø—Ç —Å –¥–∞–Ω–Ω—ã–º–∏")
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
                        if "window.__INITIAL_STATE__" in content:
                            start = content.find("window.__INITIAL_STATE__ = ") + len("window.__INITIAL_STATE__ = ")
                            end = content.find(";", start)
                            if end == -1:
                                end = content.find("</script>", start)
                            json_text = content[start:end].strip()
                        break
            except:
                pass
        
        if not json_text:
            # –°–ø–æ—Å–æ–± 2: –ë–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç body
            try:
                body = driver.find_element(By.TAG_NAME, "body")
                json_text = body.text
                print("‚úÖ –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑ body")
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        
        if json_text:
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
            try:
                data = json.loads(json_text)
                print("‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω!")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
                filename = "yandex_market_response.json"
                with open(filename, "w", encoding="utf-8") as f:
                    json.dump(data, f, ensure_ascii=False, indent=2)
                print(f"üíæ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {filename}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                print("\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON:")
                print(f"- –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è: {list(data.keys())}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                analyze_yandex_structure(data)
                
                return data
                
            except json.JSONDecodeError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                print("üìÑ –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML
                with open("yandex_response.html", "w", encoding="utf-8") as f:
                    f.write(driver.page_source)
                print("üíæ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: yandex_response.html")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç
                if json_text:
                    with open("yandex_response.txt", "w", encoding="utf-8") as f:
                        f.write(json_text)
                    print("üíæ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: yandex_response.txt")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            with open("yandex_error.html", "w", encoding="utf-8") as f:
                f.write(driver.page_source)
            print("üíæ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: yandex_error.html")
            
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        
    finally:
        print("\nüîÑ –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        driver.quit()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")

def analyze_yandex_structure(data):
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON –æ—Ç –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç"""
    print("\nüîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –Ø–ù–î–ï–ö–°.–ú–ê–†–ö–ï–¢:")
    print("=" * 60)
    
    if isinstance(data, dict):
        for key, value in data.items():
            if isinstance(value, (dict, list)):
                print(f"- {key}: {type(value).__name__} ({len(value)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)")
            else:
                print(f"- {key}: {type(value).__name__}")
                
        # –ò—â–µ–º –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
        product_keys = []
        for key in data.keys():
            if any(word in key.lower() for word in ["product", "item", "goods", "catalog", "search"]):
                product_keys.append(key)
        
        if product_keys:
            print(f"\nüéØ –í–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏: {product_keys}")
    
    elif isinstance(data, list):
        print(f"- –ú–∞—Å—Å–∏–≤ —Å {len(data)} —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")
        if data:
            print(f"- –¢–∏–ø –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞: {type(data[0]).__name__}")

if __name__ == "__main__":
    # URL –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç –¥–ª—è RTX 5080
    url = "https://market.yandex.ru/search?text=rtx5080&hid=91031&how=aprice&rs=eJwz0qhi4Zh-nPUTIwcHgwSDApD5l3GG_4d9vUzafrz2U5lskpjsVzABhQESHA1M&glfilter=36036031%3A60497935"
    
    print("üéØ –ü–æ–ª—É—á–∞–µ–º JSON –æ—Ç –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç\n")
    get_yandex_json(url) 