# --- Upstreams для внешних сервисов ---
upstream frontend {
    server marketvision-frontend-dev:3006;
    keepalive 32;
}

upstream db_api_rest {
    server marketvision-database-api:3004;
    keepalive 32;
}

upstream product_filter_service {
    server marketvision-product-aggregator:3001;
    keepalive 32;
}

# --- gRPC Upstreams для внутренних сервисов (без SSL) ---
upstream grpc_wb {
    server marketvision-wb-parser:3000;
    keepalive 32;
}

upstream grpc_ozon {
    server marketvision-ozon-parser:3002;
    keepalive 32;
}

upstream grpc_db {
    server marketvision-database-api:50051;
    keepalive 32;
}

# --- Общие настройки безопасности ---
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;

# --- HTTP Server (редирект на HTTPS) ---
server {
    listen 80;
    server_name marketvisionpro.ru www.marketvisionpro.ru localhost;
    
    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Редирект на HTTPS
    return 301 https://$host$request_uri;
}

# --- HTTPS СЕРВЕР (внешние запросы с SSL) ---
server {
    listen 443 ssl;
    http2 on;
    server_name marketvisionpro.ru www.marketvisionpro.ru localhost;

    # SSL Сертификаты
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    
    # SSL настройки безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Таймауты
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Буферизация
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # --- API роуты для продуктов ---
    location /api/products-by-query/ {
        proxy_pass http://db_api_rest/products/products-by-query/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }
    
    location /api/products/price-history-by-query {
        proxy_pass http://db_api_rest/products/price-history-by-query;
        include /etc/nginx/conf.d/proxy_common.conf;
    }
    
    location /api/products/ {
        proxy_pass http://db_api_rest/products/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для аутентификации ---
    location ^~ /auth/ {
        proxy_pass http://db_api_rest/auth/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для избранного (все запросы идут в db-api) ---
    location ^~ /api/auth/favorites/check {
        proxy_pass http://db_api_rest/auth/favorites/check;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/auth/favorites {
        proxy_pass http://db_api_rest/auth/favorites;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для Telegram ---
    location = /api/auth/telegram {
        proxy_pass http://db_api_rest/auth/telegram;
        include /etc/nginx/conf.d/proxy_common.conf;
    }
    
    # --- MarketVision API роуты (Next.js API routes) - ОБЩИЙ МАРШРУТ ПОСЛЕ СПЕЦИФИЧНЫХ ---
    location /api/ {
        proxy_pass http://frontend;
        include /etc/nginx/conf.d/proxy_common.conf;
    }
    
    # --- Product Filter Service API ---
    location /products/ {
        proxy_pass http://product_filter_service;
        include /etc/nginx/conf.d/proxy_common.conf;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # --- Next.js Frontend ---
    location / {
        proxy_pass http://frontend;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Кэширование для статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}

# --- ВНУТРЕННИЙ HTTP СЕРВЕР (для внутренних gRPC подключений без SSL) ---
server {
    listen 8080;
    server_name localhost;
    
    # Только для внутренних подключений (разрешаем docker подсети)
    allow 172.16.0.0/12;  # Docker network
    allow 192.168.0.0/16; # Docker network
    deny all;

    # --- API роуты для продуктов (внутренние) ---
    location /api/products-by-query/ {
        proxy_pass http://db_api_rest/products/products-by-query/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location /api/products/price-history-by-query {
        proxy_pass http://db_api_rest/products/price-history-by-query;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location /api/products/ {
        proxy_pass http://db_api_rest/products/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для аутентификации (внутренние) ---
    location ^~ /auth/ {
        proxy_pass http://db_api_rest/auth/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для аутентификации через /api/auth/ (внутренние) ---
    location ^~ /api/auth/ {
        proxy_pass http://db_api_rest/auth/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- Product Filter Service (внутренние) ---
    location /products/ {
        proxy_pass http://product_filter_service;
        include /etc/nginx/conf.d/proxy_common.conf;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # gRPC placeholder
    location /grpc/ {
        return 404 "gRPC через nginx не настроен";
    }

    # Health check для nginx
    location /nginx-health {
        access_log off;
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }
}