# --- Dev конфигурация nginx (только для запущенных dev сервисов) ---

# --- Upstreams для dev сервисов ---
upstream frontend_dev {
    server marketvision-frontend-dev:3006;
    keepalive 32;
}

upstream product_filter_dev {
    server marketvision-product-filter-dev:3001;
    keepalive 32;
}

upstream db_api_rest_dev {
    server marketvision-database-api:3004;
    keepalive 32;
}

upstream grpc_wb_dev {
    server marketvision-wb-parser:3000;
    keepalive 32;
}

upstream grpc_ozon_dev {
    server marketvision-ozon-parser:3002;
    keepalive 32;
}

upstream grpc_db_dev {
    server marketvision-database-api:50051;
    keepalive 32;
}

# --- Общие настройки безопасности ---
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;

# --- HTTP Server (dev режим без HTTPS) ---
server {
    listen 80;
    server_name localhost;
    
    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Таймауты
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Буферизация
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # --- API роуты для продуктов ---
    location /api/products-by-query/ {
        proxy_pass http://db_api_rest_dev/products/products-by-query/;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx - кэшируем только на клиенте
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    location /api/products/price-history-by-query {
        proxy_pass http://db_api_rest_dev/products/price-history-by-query;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    location /api/products/ {
        proxy_pass http://db_api_rest_dev/products/;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # --- API роуты для категорий/запросов (более специфичные роуты должны быть выше) ---
    location = /api/categories/queries/recommended-price {
        proxy_pass http://db_api_rest_dev/categories/queries/recommended-price;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ~ ^/api/categories/queries/([^/]+) {
        proxy_pass http://db_api_rest_dev/categories/queries/$1$is_args$args;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ~ ^/api/categories/queries\?.*query=([^&]+) {
        proxy_pass http://db_api_rest_dev/categories/queries/$1;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location = /api/categories/queries {
        proxy_pass http://db_api_rest_dev/categories/queries;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    location = /api/categories/remove {
        proxy_pass http://db_api_rest_dev/categories/remove;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location = /api/categories {
        proxy_pass http://db_api_rest_dev/categories;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ~ ^/api/categories/(?!queries)([^/]+)$ {
        proxy_pass http://db_api_rest_dev/categories/$1;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location /api/categories/ {
        proxy_pass http://db_api_rest_dev/categories/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- API роуты для авторизации админов ---
    location ^~ /api/admin/login {
        proxy_pass http://db_api_rest_dev/auth/login;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/admin/verify {
        proxy_pass http://db_api_rest_dev/admin/verify;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/admin/me {
        proxy_pass http://db_api_rest_dev/admin/verify;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/admin/logout {
        proxy_pass http://db_api_rest_dev/auth/logout;
        include /etc/nginx/conf.d/proxy_common.conf;
    }



    location ^~ /auth/ {
        proxy_pass http://db_api_rest_dev/auth/;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ~ ^/api/auth/favorites/([^/]+)/check/(.+)$ {
        proxy_pass http://db_api_rest_dev/auth/favorites/check?telegram_id=$1&query=$2;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/auth/favorites/check {
        proxy_pass http://db_api_rest_dev/auth/favorites/check;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/auth/favorites/add {
        proxy_pass http://db_api_rest_dev/auth/favorites/add;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/auth/favorites/remove {
        proxy_pass http://db_api_rest_dev/auth/favorites/remove;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ^~ /api/auth/favorites {
        proxy_pass http://db_api_rest_dev/auth/favorites;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location = /api/auth/telegram {
        proxy_pass http://db_api_rest_dev/auth/telegram;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    location ~ ^/api/auth/telegram/(.+)$ {
        proxy_pass http://db_api_rest_dev/auth/telegram/$1;
        include /etc/nginx/conf.d/proxy_common.conf;
    }

    # --- Product Filter Service API ---
    location /products/ {
        proxy_pass http://product_filter_dev;
        include /etc/nginx/conf.d/proxy_common.conf;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # --- MarketVision API роуты (Next.js API routes) ---
    location /api/ {
        proxy_pass http://frontend_dev;
        include /etc/nginx/conf.d/proxy_common.conf;
    }
    
    # --- Страницы продуктов ---
    location ~ ^/product/ {
        proxy_pass http://frontend_dev;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # --- Next.js Frontend ---
    location / {
        proxy_pass http://frontend_dev;
        include /etc/nginx/conf.d/proxy_common.conf;
        
        # Отключаем кэширование в Nginx для главной страницы
        location = / {
            proxy_pass http://frontend_dev;
            include /etc/nginx/conf.d/proxy_common.conf;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Кэширование для статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # --- Управление кэшем ---
    location /api/cache/clear {
        # Простая очистка кэша - возвращаем успех
        # Nginx автоматически обновит кэш при следующих запросах
        add_header Content-Type application/json;
        return 200 '{"success": true, "message": "Cache clear signal received"}';
    }

    # Health check для nginx
    location /nginx-health {
        access_log off;
        return 200 "nginx dev healthy\n";
        add_header Content-Type text/plain;
    }
}
