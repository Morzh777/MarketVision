#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ docker-compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker-compose &> /dev/null; then
    print_error "docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
update_service() {
    local service=$1
    local compose_file=$2
    
    print_status "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º $service..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
    docker-compose -f $compose_file stop $service 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker-compose -f $compose_file rm -f $service 2>/dev/null || true
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    docker-compose -f $compose_file up -d --build $service
    
    print_success "‚úÖ $service –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
update_all() {
    print_status "üöÄ –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö docker-compose —Ñ–∞–π–ª–æ–≤
    local compose_files=(
        "docker-compose.ozon.yml"
        "docker-compose.db.yml"
        "docker-compose.product-filter.yml"
        "docker-compose.wb-api.yml"
        "docker-compose.marketvision.yml"
    )
    
    for file in "${compose_files[@]}"; do
        if [ -f "$file" ]; then
            print_status "üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º $file"
            docker-compose -f $file down
            docker-compose -f $file up -d --build
        fi
    done
    
    print_success "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    print_status "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    
    local compose_files=(
        "docker-compose.ozon.yml:Ozon API"
        "docker-compose.db.yml:DB API"
        "docker-compose.product-filter.yml:Product Filter"
        "docker-compose.wb-api.yml:WB API"
        "docker-compose.marketvision.yml:MarketVision"
    )
    
    for file_info in "${compose_files[@]}"; do
        IFS=':' read -r file name <<< "$file_info"
        if [ -f "$file" ]; then
            echo ""
            print_status "$name:"
            docker-compose -f $file ps
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    local service=$1
    local compose_file=$2
    
    if [ -z "$service" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: ozon-api, db-api, product-filter-service, wb-api, marketvision-api"
        exit 1
    fi
    
    print_status "üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è $service..."
    docker-compose -f $compose_file logs -f $service
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "ozon")
        update_service "ozon-api" "docker-compose.ozon.yml"
        ;;
    "db")
        update_service "db-api" "docker-compose.db.yml"
        ;;
    "product-filter")
        update_service "product-filter-service" "docker-compose.product-filter.yml"
        ;;
    "wb")
        update_service "wb-api" "docker-compose.wb-api.yml"
        ;;
    "marketvision")
        update_service "marketvision-api" "docker-compose.marketvision.yml"
        ;;
    "all")
        update_all
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs "$2" "$3"
        ;;
    "watchtower")
        print_status "üîç –ó–∞–ø—É—Å–∫–∞–µ–º Watchtower –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
        docker-compose -f docker-compose.watchtower.yml up -d
        print_success "‚úÖ Watchtower –∑–∞–ø—É—â–µ–Ω"
        ;;
    *)
        echo "üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞] [–æ–ø—Ü–∏–∏]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  ozon              - –û–±–Ω–æ–≤–∏—Ç—å Ozon API"
        echo "  db                - –û–±–Ω–æ–≤–∏—Ç—å DB API"
        echo "  product-filter    - –û–±–Ω–æ–≤–∏—Ç—å Product Filter Service"
        echo "  wb                - –û–±–Ω–æ–≤–∏—Ç—å WB API"
        echo "  marketvision      - –û–±–Ω–æ–≤–∏—Ç—å MarketVision API"
        echo "  all               - –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  status            - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo "  logs <service> <file> - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞"
        echo "  watchtower        - –ó–∞–ø—É—Å—Ç–∏—Ç—å Watchtower –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 ozon                    # –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ Ozon API"
        echo "  $0 logs ozon-api docker-compose.ozon.yml  # –õ–æ–≥–∏ Ozon API"
        echo "  $0 all                     # –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        ;;
esac 